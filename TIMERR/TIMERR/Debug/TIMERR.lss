
TIMERR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001660  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  00001660  000016f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000019  00800078  00800078  0000170c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000170c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000173c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000250  00000000  00000000  00001778  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017ac  00000000  00000000  000019c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009e6  00000000  00000000  00003174  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015bc  00000000  00000000  00003b5a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000934  00000000  00000000  00005118  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00006c71  00000000  00000000  00005a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001324  00000000  00000000  0000c6bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f8  00000000  00000000  0000d9e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000157f  00000000  00000000  0000dbd9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 92 00 	jmp	0x124	; 0x124 <__vector_1>
       8:	0c 94 c9 00 	jmp	0x192	; 0x192 <__vector_2>
       c:	0c 94 00 01 	jmp	0x200	; 0x200 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 cd 09 	jmp	0x139a	; 0x139a <__vector_6>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 5f 09 	jmp	0x12be	; 0x12be <__vector_10>
      2c:	0c 94 96 09 	jmp	0x132c	; 0x132c <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 49 00 	jmp	0x92	; 0x92 <__vector_16>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e6       	ldi	r30, 0x60	; 96
      68:	f6 e1       	ldi	r31, 0x16	; 22
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a8 37       	cpi	r26, 0x78	; 120
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	a8 e7       	ldi	r26, 0x78	; 120
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a1 39       	cpi	r26, 0x91	; 145
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 52 07 	call	0xea4	; 0xea4 <main>
      8a:	0c 94 2e 0b 	jmp	0x165c	; 0x165c <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__vector_16>:
	return res3 ;
	
}
void __vector_16 (void) __attribute__((signal));
void __vector_16 (void)
{
      92:	1f 92       	push	r1
      94:	0f 92       	push	r0
      96:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
      9a:	0f 92       	push	r0
      9c:	11 24       	eor	r1, r1
      9e:	2f 93       	push	r18
      a0:	3f 93       	push	r19
      a2:	4f 93       	push	r20
      a4:	5f 93       	push	r21
      a6:	6f 93       	push	r22
      a8:	7f 93       	push	r23
      aa:	8f 93       	push	r24
      ac:	9f 93       	push	r25
      ae:	af 93       	push	r26
      b0:	bf 93       	push	r27
      b2:	ef 93       	push	r30
      b4:	ff 93       	push	r31
      b6:	cf 93       	push	r28
      b8:	df 93       	push	r29
      ba:	cd b7       	in	r28, 0x3d	; 61
      bc:	de b7       	in	r29, 0x3e	; 62
	/*read adc result */
	*(Adc_U16Reading) =RESULT;
      be:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__data_end>
      c2:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__data_end+0x1>
      c6:	24 e2       	ldi	r18, 0x24	; 36
      c8:	30 e0       	ldi	r19, 0x00	; 0
      ca:	f9 01       	movw	r30, r18
      cc:	20 81       	ld	r18, Z
      ce:	31 81       	ldd	r19, Z+1	; 0x01
      d0:	fc 01       	movw	r30, r24
      d2:	31 83       	std	Z+1, r19	; 0x01
      d4:	20 83       	st	Z, r18
	/*invoke the call back notification func*/
	Adc_PvCallBackNotification();
      d6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <Adc_PvCallBackNotification>
      da:	90 91 7b 00 	lds	r25, 0x007B	; 0x80007b <Adc_PvCallBackNotification+0x1>
      de:	fc 01       	movw	r30, r24
      e0:	09 95       	icall
	
	ADC_BusyState = IDEAL ;
      e2:	81 e0       	ldi	r24, 0x01	; 1
      e4:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	
	/*disable the interrupt of  ADC*/
	clearbit(ADCSRA , ADCSRA_ADIE);
      e8:	86 e2       	ldi	r24, 0x26	; 38
      ea:	90 e0       	ldi	r25, 0x00	; 0
      ec:	26 e2       	ldi	r18, 0x26	; 38
      ee:	30 e0       	ldi	r19, 0x00	; 0
      f0:	f9 01       	movw	r30, r18
      f2:	20 81       	ld	r18, Z
      f4:	27 7f       	andi	r18, 0xF7	; 247
      f6:	fc 01       	movw	r30, r24
      f8:	20 83       	st	Z, r18
	
}
      fa:	00 00       	nop
      fc:	df 91       	pop	r29
      fe:	cf 91       	pop	r28
     100:	ff 91       	pop	r31
     102:	ef 91       	pop	r30
     104:	bf 91       	pop	r27
     106:	af 91       	pop	r26
     108:	9f 91       	pop	r25
     10a:	8f 91       	pop	r24
     10c:	7f 91       	pop	r23
     10e:	6f 91       	pop	r22
     110:	5f 91       	pop	r21
     112:	4f 91       	pop	r20
     114:	3f 91       	pop	r19
     116:	2f 91       	pop	r18
     118:	0f 90       	pop	r0
     11a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     11e:	0f 90       	pop	r0
     120:	1f 90       	pop	r1
     122:	18 95       	reti

00000124 <__vector_1>:
/*global pointer to function to hold INT1 ISR address*/

/* ISR FOR INT0*/
void __vector_1 (void) __attribute__((signal));
void __vector_1 (void)
{
     124:	1f 92       	push	r1
     126:	0f 92       	push	r0
     128:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     12c:	0f 92       	push	r0
     12e:	11 24       	eor	r1, r1
     130:	2f 93       	push	r18
     132:	3f 93       	push	r19
     134:	4f 93       	push	r20
     136:	5f 93       	push	r21
     138:	6f 93       	push	r22
     13a:	7f 93       	push	r23
     13c:	8f 93       	push	r24
     13e:	9f 93       	push	r25
     140:	af 93       	push	r26
     142:	bf 93       	push	r27
     144:	ef 93       	push	r30
     146:	ff 93       	push	r31
     148:	cf 93       	push	r28
     14a:	df 93       	push	r29
     14c:	cd b7       	in	r28, 0x3d	; 61
     14e:	de b7       	in	r29, 0x3e	; 62
	if (EXTI_PVInt0ptrfunc !=NULL)
     150:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <EXTI_PVInt0ptrfunc>
     154:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <EXTI_PVInt0ptrfunc+0x1>
     158:	89 2b       	or	r24, r25
     15a:	31 f0       	breq	.+12     	; 0x168 <__vector_1+0x44>
	{
		EXTI_PVInt0ptrfunc();
     15c:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <EXTI_PVInt0ptrfunc>
     160:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <EXTI_PVInt0ptrfunc+0x1>
     164:	fc 01       	movw	r30, r24
     166:	09 95       	icall
	}
	
}
     168:	00 00       	nop
     16a:	df 91       	pop	r29
     16c:	cf 91       	pop	r28
     16e:	ff 91       	pop	r31
     170:	ef 91       	pop	r30
     172:	bf 91       	pop	r27
     174:	af 91       	pop	r26
     176:	9f 91       	pop	r25
     178:	8f 91       	pop	r24
     17a:	7f 91       	pop	r23
     17c:	6f 91       	pop	r22
     17e:	5f 91       	pop	r21
     180:	4f 91       	pop	r20
     182:	3f 91       	pop	r19
     184:	2f 91       	pop	r18
     186:	0f 90       	pop	r0
     188:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     18c:	0f 90       	pop	r0
     18e:	1f 90       	pop	r1
     190:	18 95       	reti

00000192 <__vector_2>:

/* ISR FOR INT1*/
void __vector_2 (void) __attribute__((signal));
void __vector_2 (void)
{
     192:	1f 92       	push	r1
     194:	0f 92       	push	r0
     196:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     19a:	0f 92       	push	r0
     19c:	11 24       	eor	r1, r1
     19e:	2f 93       	push	r18
     1a0:	3f 93       	push	r19
     1a2:	4f 93       	push	r20
     1a4:	5f 93       	push	r21
     1a6:	6f 93       	push	r22
     1a8:	7f 93       	push	r23
     1aa:	8f 93       	push	r24
     1ac:	9f 93       	push	r25
     1ae:	af 93       	push	r26
     1b0:	bf 93       	push	r27
     1b2:	ef 93       	push	r30
     1b4:	ff 93       	push	r31
     1b6:	cf 93       	push	r28
     1b8:	df 93       	push	r29
     1ba:	cd b7       	in	r28, 0x3d	; 61
     1bc:	de b7       	in	r29, 0x3e	; 62
	if (EXTI_PVInt0ptrfunc !=NULL)
     1be:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <EXTI_PVInt0ptrfunc>
     1c2:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <EXTI_PVInt0ptrfunc+0x1>
     1c6:	89 2b       	or	r24, r25
     1c8:	31 f0       	breq	.+12     	; 0x1d6 <__vector_2+0x44>
	{
		EXTI_PVInt1ptrfunc();
     1ca:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <EXTI_PVInt1ptrfunc>
     1ce:	90 91 7f 00 	lds	r25, 0x007F	; 0x80007f <EXTI_PVInt1ptrfunc+0x1>
     1d2:	fc 01       	movw	r30, r24
     1d4:	09 95       	icall
	}
	
}
     1d6:	00 00       	nop
     1d8:	df 91       	pop	r29
     1da:	cf 91       	pop	r28
     1dc:	ff 91       	pop	r31
     1de:	ef 91       	pop	r30
     1e0:	bf 91       	pop	r27
     1e2:	af 91       	pop	r26
     1e4:	9f 91       	pop	r25
     1e6:	8f 91       	pop	r24
     1e8:	7f 91       	pop	r23
     1ea:	6f 91       	pop	r22
     1ec:	5f 91       	pop	r21
     1ee:	4f 91       	pop	r20
     1f0:	3f 91       	pop	r19
     1f2:	2f 91       	pop	r18
     1f4:	0f 90       	pop	r0
     1f6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     1fa:	0f 90       	pop	r0
     1fc:	1f 90       	pop	r1
     1fe:	18 95       	reti

00000200 <__vector_3>:

/* ISR FOR INT2*/
void __vector_3 (void) __attribute__((signal));
void __vector_3 (void)
{
     200:	1f 92       	push	r1
     202:	0f 92       	push	r0
     204:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     208:	0f 92       	push	r0
     20a:	11 24       	eor	r1, r1
     20c:	2f 93       	push	r18
     20e:	3f 93       	push	r19
     210:	4f 93       	push	r20
     212:	5f 93       	push	r21
     214:	6f 93       	push	r22
     216:	7f 93       	push	r23
     218:	8f 93       	push	r24
     21a:	9f 93       	push	r25
     21c:	af 93       	push	r26
     21e:	bf 93       	push	r27
     220:	ef 93       	push	r30
     222:	ff 93       	push	r31
     224:	cf 93       	push	r28
     226:	df 93       	push	r29
     228:	cd b7       	in	r28, 0x3d	; 61
     22a:	de b7       	in	r29, 0x3e	; 62
	if (EXTI_PVInt0ptrfunc !=NULL)
     22c:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <EXTI_PVInt0ptrfunc>
     230:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <EXTI_PVInt0ptrfunc+0x1>
     234:	89 2b       	or	r24, r25
     236:	31 f0       	breq	.+12     	; 0x244 <__vector_3+0x44>
	{
		EXTI_PVInt2ptrfunc();
     238:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <EXTI_PVInt2ptrfunc>
     23c:	90 91 81 00 	lds	r25, 0x0081	; 0x800081 <EXTI_PVInt2ptrfunc+0x1>
     240:	fc 01       	movw	r30, r24
     242:	09 95       	icall
	}
	
}
     244:	00 00       	nop
     246:	df 91       	pop	r29
     248:	cf 91       	pop	r28
     24a:	ff 91       	pop	r31
     24c:	ef 91       	pop	r30
     24e:	bf 91       	pop	r27
     250:	af 91       	pop	r26
     252:	9f 91       	pop	r25
     254:	8f 91       	pop	r24
     256:	7f 91       	pop	r23
     258:	6f 91       	pop	r22
     25a:	5f 91       	pop	r21
     25c:	4f 91       	pop	r20
     25e:	3f 91       	pop	r19
     260:	2f 91       	pop	r18
     262:	0f 90       	pop	r0
     264:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
     268:	0f 90       	pop	r0
     26a:	1f 90       	pop	r1
     26c:	18 95       	reti

0000026e <GIE_ENABLE>:
#include "GIE_REGISTER.h"
#include "GIE_INTERFACE.h"


void GIE_ENABLE(void)
{
     26e:	cf 93       	push	r28
     270:	df 93       	push	r29
     272:	cd b7       	in	r28, 0x3d	; 61
     274:	de b7       	in	r29, 0x3e	; 62
	setbit(SREG,SREG_I);
     276:	8f e5       	ldi	r24, 0x5F	; 95
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	2f e5       	ldi	r18, 0x5F	; 95
     27c:	30 e0       	ldi	r19, 0x00	; 0
     27e:	f9 01       	movw	r30, r18
     280:	20 81       	ld	r18, Z
     282:	20 68       	ori	r18, 0x80	; 128
     284:	fc 01       	movw	r30, r24
     286:	20 83       	st	Z, r18
}
     288:	00 00       	nop
     28a:	df 91       	pop	r29
     28c:	cf 91       	pop	r28
     28e:	08 95       	ret

00000290 <init_lcd>:
		write_char(arr[i]);
	}
	position_xy(x,y);
	write_char(block_number);
	
}
     290:	0f 93       	push	r16
     292:	1f 93       	push	r17
     294:	cf 93       	push	r28
     296:	df 93       	push	r29
     298:	cd b7       	in	r28, 0x3d	; 61
     29a:	de b7       	in	r29, 0x3e	; 62
     29c:	c6 54       	subi	r28, 0x46	; 70
     29e:	d1 09       	sbc	r29, r1
     2a0:	0f b6       	in	r0, 0x3f	; 63
     2a2:	f8 94       	cli
     2a4:	de bf       	out	0x3e, r29	; 62
     2a6:	0f be       	out	0x3f, r0	; 63
     2a8:	cd bf       	out	0x3d, r28	; 61
     2aa:	80 e0       	ldi	r24, 0x00	; 0
     2ac:	90 e0       	ldi	r25, 0x00	; 0
     2ae:	ac e0       	ldi	r26, 0x0C	; 12
     2b0:	b2 e4       	ldi	r27, 0x42	; 66
     2b2:	89 83       	std	Y+1, r24	; 0x01
     2b4:	9a 83       	std	Y+2, r25	; 0x02
     2b6:	ab 83       	std	Y+3, r26	; 0x03
     2b8:	bc 83       	std	Y+4, r27	; 0x04
     2ba:	20 e0       	ldi	r18, 0x00	; 0
     2bc:	30 e0       	ldi	r19, 0x00	; 0
     2be:	4a e7       	ldi	r20, 0x7A	; 122
     2c0:	53 e4       	ldi	r21, 0x43	; 67
     2c2:	69 81       	ldd	r22, Y+1	; 0x01
     2c4:	7a 81       	ldd	r23, Y+2	; 0x02
     2c6:	8b 81       	ldd	r24, Y+3	; 0x03
     2c8:	9c 81       	ldd	r25, Y+4	; 0x04
     2ca:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__mulsf3>
     2ce:	dc 01       	movw	r26, r24
     2d0:	cb 01       	movw	r24, r22
     2d2:	9e 01       	movw	r18, r28
     2d4:	23 5c       	subi	r18, 0xC3	; 195
     2d6:	3f 4f       	sbci	r19, 0xFF	; 255
     2d8:	f9 01       	movw	r30, r18
     2da:	80 83       	st	Z, r24
     2dc:	91 83       	std	Z+1, r25	; 0x01
     2de:	a2 83       	std	Z+2, r26	; 0x02
     2e0:	b3 83       	std	Z+3, r27	; 0x03
     2e2:	20 e0       	ldi	r18, 0x00	; 0
     2e4:	30 e0       	ldi	r19, 0x00	; 0
     2e6:	40 e8       	ldi	r20, 0x80	; 128
     2e8:	5f e3       	ldi	r21, 0x3F	; 63
     2ea:	ce 01       	movw	r24, r28
     2ec:	cd 96       	adiw	r24, 0x3d	; 61
     2ee:	fc 01       	movw	r30, r24
     2f0:	60 81       	ld	r22, Z
     2f2:	71 81       	ldd	r23, Z+1	; 0x01
     2f4:	82 81       	ldd	r24, Z+2	; 0x02
     2f6:	93 81       	ldd	r25, Z+3	; 0x03
     2f8:	0e 94 04 0a 	call	0x1408	; 0x1408 <__cmpsf2>
     2fc:	88 23       	and	r24, r24
     2fe:	4c f4       	brge	.+18     	; 0x312 <init_lcd+0x82>
     300:	ce 01       	movw	r24, r28
     302:	8f 5b       	subi	r24, 0xBF	; 191
     304:	9f 4f       	sbci	r25, 0xFF	; 255
     306:	21 e0       	ldi	r18, 0x01	; 1
     308:	30 e0       	ldi	r19, 0x00	; 0
     30a:	fc 01       	movw	r30, r24
     30c:	31 83       	std	Z+1, r19	; 0x01
     30e:	20 83       	st	Z, r18
     310:	67 c0       	rjmp	.+206    	; 0x3e0 <init_lcd+0x150>
     312:	20 e0       	ldi	r18, 0x00	; 0
     314:	3f ef       	ldi	r19, 0xFF	; 255
     316:	4f e7       	ldi	r20, 0x7F	; 127
     318:	57 e4       	ldi	r21, 0x47	; 71
     31a:	ce 01       	movw	r24, r28
     31c:	cd 96       	adiw	r24, 0x3d	; 61
     31e:	fc 01       	movw	r30, r24
     320:	60 81       	ld	r22, Z
     322:	71 81       	ldd	r23, Z+1	; 0x01
     324:	82 81       	ldd	r24, Z+2	; 0x02
     326:	93 81       	ldd	r25, Z+3	; 0x03
     328:	0e 94 ad 0a 	call	0x155a	; 0x155a <__gesf2>
     32c:	18 16       	cp	r1, r24
     32e:	0c f0       	brlt	.+2      	; 0x332 <init_lcd+0xa2>
     330:	46 c0       	rjmp	.+140    	; 0x3be <init_lcd+0x12e>
     332:	20 e0       	ldi	r18, 0x00	; 0
     334:	30 e0       	ldi	r19, 0x00	; 0
     336:	40 e2       	ldi	r20, 0x20	; 32
     338:	51 e4       	ldi	r21, 0x41	; 65
     33a:	69 81       	ldd	r22, Y+1	; 0x01
     33c:	7a 81       	ldd	r23, Y+2	; 0x02
     33e:	8b 81       	ldd	r24, Y+3	; 0x03
     340:	9c 81       	ldd	r25, Y+4	; 0x04
     342:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__mulsf3>
     346:	dc 01       	movw	r26, r24
     348:	cb 01       	movw	r24, r22
     34a:	8e 01       	movw	r16, r28
     34c:	0f 5b       	subi	r16, 0xBF	; 191
     34e:	1f 4f       	sbci	r17, 0xFF	; 255
     350:	bc 01       	movw	r22, r24
     352:	cd 01       	movw	r24, r26
     354:	0e 94 09 0a 	call	0x1412	; 0x1412 <__fixunssfsi>
     358:	dc 01       	movw	r26, r24
     35a:	cb 01       	movw	r24, r22
     35c:	f8 01       	movw	r30, r16
     35e:	91 83       	std	Z+1, r25	; 0x01
     360:	80 83       	st	Z, r24
     362:	24 c0       	rjmp	.+72     	; 0x3ac <init_lcd+0x11c>
     364:	ce 01       	movw	r24, r28
     366:	8d 5b       	subi	r24, 0xBD	; 189
     368:	9f 4f       	sbci	r25, 0xFF	; 255
     36a:	29 e1       	ldi	r18, 0x19	; 25
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	fc 01       	movw	r30, r24
     370:	31 83       	std	Z+1, r19	; 0x01
     372:	20 83       	st	Z, r18
     374:	ce 01       	movw	r24, r28
     376:	8d 5b       	subi	r24, 0xBD	; 189
     378:	9f 4f       	sbci	r25, 0xFF	; 255
     37a:	fc 01       	movw	r30, r24
     37c:	80 81       	ld	r24, Z
     37e:	91 81       	ldd	r25, Z+1	; 0x01
     380:	01 97       	sbiw	r24, 0x01	; 1
     382:	f1 f7       	brne	.-4      	; 0x380 <init_lcd+0xf0>
     384:	9e 01       	movw	r18, r28
     386:	2d 5b       	subi	r18, 0xBD	; 189
     388:	3f 4f       	sbci	r19, 0xFF	; 255
     38a:	f9 01       	movw	r30, r18
     38c:	91 83       	std	Z+1, r25	; 0x01
     38e:	80 83       	st	Z, r24
     390:	ce 01       	movw	r24, r28
     392:	8f 5b       	subi	r24, 0xBF	; 191
     394:	9f 4f       	sbci	r25, 0xFF	; 255
     396:	9e 01       	movw	r18, r28
     398:	2f 5b       	subi	r18, 0xBF	; 191
     39a:	3f 4f       	sbci	r19, 0xFF	; 255
     39c:	f9 01       	movw	r30, r18
     39e:	20 81       	ld	r18, Z
     3a0:	31 81       	ldd	r19, Z+1	; 0x01
     3a2:	21 50       	subi	r18, 0x01	; 1
     3a4:	31 09       	sbc	r19, r1
     3a6:	fc 01       	movw	r30, r24
     3a8:	31 83       	std	Z+1, r19	; 0x01
     3aa:	20 83       	st	Z, r18
     3ac:	ce 01       	movw	r24, r28
     3ae:	8f 5b       	subi	r24, 0xBF	; 191
     3b0:	9f 4f       	sbci	r25, 0xFF	; 255
     3b2:	fc 01       	movw	r30, r24
     3b4:	80 81       	ld	r24, Z
     3b6:	91 81       	ldd	r25, Z+1	; 0x01
     3b8:	89 2b       	or	r24, r25
     3ba:	a1 f6       	brne	.-88     	; 0x364 <init_lcd+0xd4>
     3bc:	2b c0       	rjmp	.+86     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     3be:	8e 01       	movw	r16, r28
     3c0:	0f 5b       	subi	r16, 0xBF	; 191
     3c2:	1f 4f       	sbci	r17, 0xFF	; 255
     3c4:	ce 01       	movw	r24, r28
     3c6:	cd 96       	adiw	r24, 0x3d	; 61
     3c8:	fc 01       	movw	r30, r24
     3ca:	60 81       	ld	r22, Z
     3cc:	71 81       	ldd	r23, Z+1	; 0x01
     3ce:	82 81       	ldd	r24, Z+2	; 0x02
     3d0:	93 81       	ldd	r25, Z+3	; 0x03
     3d2:	0e 94 09 0a 	call	0x1412	; 0x1412 <__fixunssfsi>
     3d6:	dc 01       	movw	r26, r24
     3d8:	cb 01       	movw	r24, r22
     3da:	f8 01       	movw	r30, r16
     3dc:	91 83       	std	Z+1, r25	; 0x01
     3de:	80 83       	st	Z, r24
     3e0:	ce 01       	movw	r24, r28
     3e2:	8b 5b       	subi	r24, 0xBB	; 187
     3e4:	9f 4f       	sbci	r25, 0xFF	; 255
     3e6:	9e 01       	movw	r18, r28
     3e8:	2f 5b       	subi	r18, 0xBF	; 191
     3ea:	3f 4f       	sbci	r19, 0xFF	; 255
     3ec:	f9 01       	movw	r30, r18
     3ee:	20 81       	ld	r18, Z
     3f0:	31 81       	ldd	r19, Z+1	; 0x01
     3f2:	fc 01       	movw	r30, r24
     3f4:	31 83       	std	Z+1, r19	; 0x01
     3f6:	20 83       	st	Z, r18
     3f8:	ce 01       	movw	r24, r28
     3fa:	8b 5b       	subi	r24, 0xBB	; 187
     3fc:	9f 4f       	sbci	r25, 0xFF	; 255
     3fe:	fc 01       	movw	r30, r24
     400:	80 81       	ld	r24, Z
     402:	91 81       	ldd	r25, Z+1	; 0x01
     404:	01 97       	sbiw	r24, 0x01	; 1
     406:	f1 f7       	brne	.-4      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
     408:	9e 01       	movw	r18, r28
     40a:	2b 5b       	subi	r18, 0xBB	; 187
     40c:	3f 4f       	sbci	r19, 0xFF	; 255
     40e:	f9 01       	movw	r30, r18
     410:	91 83       	std	Z+1, r25	; 0x01
     412:	80 83       	st	Z, r24
     414:	88 e3       	ldi	r24, 0x38	; 56
     416:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <write_command>
     41a:	80 e0       	ldi	r24, 0x00	; 0
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	a0 e8       	ldi	r26, 0x80	; 128
     420:	bf e3       	ldi	r27, 0x3F	; 63
     422:	8d 83       	std	Y+5, r24	; 0x05
     424:	9e 83       	std	Y+6, r25	; 0x06
     426:	af 83       	std	Y+7, r26	; 0x07
     428:	b8 87       	std	Y+8, r27	; 0x08
     42a:	20 e0       	ldi	r18, 0x00	; 0
     42c:	30 e0       	ldi	r19, 0x00	; 0
     42e:	4a e7       	ldi	r20, 0x7A	; 122
     430:	53 e4       	ldi	r21, 0x43	; 67
     432:	6d 81       	ldd	r22, Y+5	; 0x05
     434:	7e 81       	ldd	r23, Y+6	; 0x06
     436:	8f 81       	ldd	r24, Y+7	; 0x07
     438:	98 85       	ldd	r25, Y+8	; 0x08
     43a:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__mulsf3>
     43e:	dc 01       	movw	r26, r24
     440:	cb 01       	movw	r24, r22
     442:	8b ab       	std	Y+51, r24	; 0x33
     444:	9c ab       	std	Y+52, r25	; 0x34
     446:	ad ab       	std	Y+53, r26	; 0x35
     448:	be ab       	std	Y+54, r27	; 0x36
     44a:	20 e0       	ldi	r18, 0x00	; 0
     44c:	30 e0       	ldi	r19, 0x00	; 0
     44e:	40 e8       	ldi	r20, 0x80	; 128
     450:	5f e3       	ldi	r21, 0x3F	; 63
     452:	6b a9       	ldd	r22, Y+51	; 0x33
     454:	7c a9       	ldd	r23, Y+52	; 0x34
     456:	8d a9       	ldd	r24, Y+53	; 0x35
     458:	9e a9       	ldd	r25, Y+54	; 0x36
     45a:	0e 94 04 0a 	call	0x1408	; 0x1408 <__cmpsf2>
     45e:	88 23       	and	r24, r24
     460:	2c f4       	brge	.+10     	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
     462:	81 e0       	ldi	r24, 0x01	; 1
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	98 af       	std	Y+56, r25	; 0x38
     468:	8f ab       	std	Y+55, r24	; 0x37
     46a:	3f c0       	rjmp	.+126    	; 0x4ea <__EEPROM_REGION_LENGTH__+0xea>
     46c:	20 e0       	ldi	r18, 0x00	; 0
     46e:	3f ef       	ldi	r19, 0xFF	; 255
     470:	4f e7       	ldi	r20, 0x7F	; 127
     472:	57 e4       	ldi	r21, 0x47	; 71
     474:	6b a9       	ldd	r22, Y+51	; 0x33
     476:	7c a9       	ldd	r23, Y+52	; 0x34
     478:	8d a9       	ldd	r24, Y+53	; 0x35
     47a:	9e a9       	ldd	r25, Y+54	; 0x36
     47c:	0e 94 ad 0a 	call	0x155a	; 0x155a <__gesf2>
     480:	18 16       	cp	r1, r24
     482:	4c f5       	brge	.+82     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
     484:	20 e0       	ldi	r18, 0x00	; 0
     486:	30 e0       	ldi	r19, 0x00	; 0
     488:	40 e2       	ldi	r20, 0x20	; 32
     48a:	51 e4       	ldi	r21, 0x41	; 65
     48c:	6d 81       	ldd	r22, Y+5	; 0x05
     48e:	7e 81       	ldd	r23, Y+6	; 0x06
     490:	8f 81       	ldd	r24, Y+7	; 0x07
     492:	98 85       	ldd	r25, Y+8	; 0x08
     494:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__mulsf3>
     498:	dc 01       	movw	r26, r24
     49a:	cb 01       	movw	r24, r22
     49c:	bc 01       	movw	r22, r24
     49e:	cd 01       	movw	r24, r26
     4a0:	0e 94 09 0a 	call	0x1412	; 0x1412 <__fixunssfsi>
     4a4:	dc 01       	movw	r26, r24
     4a6:	cb 01       	movw	r24, r22
     4a8:	98 af       	std	Y+56, r25	; 0x38
     4aa:	8f ab       	std	Y+55, r24	; 0x37
     4ac:	0f c0       	rjmp	.+30     	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
     4ae:	89 e1       	ldi	r24, 0x19	; 25
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	9a af       	std	Y+58, r25	; 0x3a
     4b4:	89 af       	std	Y+57, r24	; 0x39
     4b6:	89 ad       	ldd	r24, Y+57	; 0x39
     4b8:	9a ad       	ldd	r25, Y+58	; 0x3a
     4ba:	01 97       	sbiw	r24, 0x01	; 1
     4bc:	f1 f7       	brne	.-4      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
     4be:	9a af       	std	Y+58, r25	; 0x3a
     4c0:	89 af       	std	Y+57, r24	; 0x39
     4c2:	8f a9       	ldd	r24, Y+55	; 0x37
     4c4:	98 ad       	ldd	r25, Y+56	; 0x38
     4c6:	01 97       	sbiw	r24, 0x01	; 1
     4c8:	98 af       	std	Y+56, r25	; 0x38
     4ca:	8f ab       	std	Y+55, r24	; 0x37
     4cc:	8f a9       	ldd	r24, Y+55	; 0x37
     4ce:	98 ad       	ldd	r25, Y+56	; 0x38
     4d0:	89 2b       	or	r24, r25
     4d2:	69 f7       	brne	.-38     	; 0x4ae <__EEPROM_REGION_LENGTH__+0xae>
     4d4:	14 c0       	rjmp	.+40     	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
     4d6:	6b a9       	ldd	r22, Y+51	; 0x33
     4d8:	7c a9       	ldd	r23, Y+52	; 0x34
     4da:	8d a9       	ldd	r24, Y+53	; 0x35
     4dc:	9e a9       	ldd	r25, Y+54	; 0x36
     4de:	0e 94 09 0a 	call	0x1412	; 0x1412 <__fixunssfsi>
     4e2:	dc 01       	movw	r26, r24
     4e4:	cb 01       	movw	r24, r22
     4e6:	98 af       	std	Y+56, r25	; 0x38
     4e8:	8f ab       	std	Y+55, r24	; 0x37
     4ea:	8f a9       	ldd	r24, Y+55	; 0x37
     4ec:	98 ad       	ldd	r25, Y+56	; 0x38
     4ee:	9c af       	std	Y+60, r25	; 0x3c
     4f0:	8b af       	std	Y+59, r24	; 0x3b
     4f2:	8b ad       	ldd	r24, Y+59	; 0x3b
     4f4:	9c ad       	ldd	r25, Y+60	; 0x3c
     4f6:	01 97       	sbiw	r24, 0x01	; 1
     4f8:	f1 f7       	brne	.-4      	; 0x4f6 <__EEPROM_REGION_LENGTH__+0xf6>
     4fa:	9c af       	std	Y+60, r25	; 0x3c
     4fc:	8b af       	std	Y+59, r24	; 0x3b
     4fe:	8c e0       	ldi	r24, 0x0C	; 12
     500:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <write_command>
     504:	80 e0       	ldi	r24, 0x00	; 0
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	a0 e8       	ldi	r26, 0x80	; 128
     50a:	bf e3       	ldi	r27, 0x3F	; 63
     50c:	89 87       	std	Y+9, r24	; 0x09
     50e:	9a 87       	std	Y+10, r25	; 0x0a
     510:	ab 87       	std	Y+11, r26	; 0x0b
     512:	bc 87       	std	Y+12, r27	; 0x0c
     514:	20 e0       	ldi	r18, 0x00	; 0
     516:	30 e0       	ldi	r19, 0x00	; 0
     518:	4a e7       	ldi	r20, 0x7A	; 122
     51a:	53 e4       	ldi	r21, 0x43	; 67
     51c:	69 85       	ldd	r22, Y+9	; 0x09
     51e:	7a 85       	ldd	r23, Y+10	; 0x0a
     520:	8b 85       	ldd	r24, Y+11	; 0x0b
     522:	9c 85       	ldd	r25, Y+12	; 0x0c
     524:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__mulsf3>
     528:	dc 01       	movw	r26, r24
     52a:	cb 01       	movw	r24, r22
     52c:	89 a7       	std	Y+41, r24	; 0x29
     52e:	9a a7       	std	Y+42, r25	; 0x2a
     530:	ab a7       	std	Y+43, r26	; 0x2b
     532:	bc a7       	std	Y+44, r27	; 0x2c
     534:	20 e0       	ldi	r18, 0x00	; 0
     536:	30 e0       	ldi	r19, 0x00	; 0
     538:	40 e8       	ldi	r20, 0x80	; 128
     53a:	5f e3       	ldi	r21, 0x3F	; 63
     53c:	69 a5       	ldd	r22, Y+41	; 0x29
     53e:	7a a5       	ldd	r23, Y+42	; 0x2a
     540:	8b a5       	ldd	r24, Y+43	; 0x2b
     542:	9c a5       	ldd	r25, Y+44	; 0x2c
     544:	0e 94 04 0a 	call	0x1408	; 0x1408 <__cmpsf2>
     548:	88 23       	and	r24, r24
     54a:	2c f4       	brge	.+10     	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
     54c:	81 e0       	ldi	r24, 0x01	; 1
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	9e a7       	std	Y+46, r25	; 0x2e
     552:	8d a7       	std	Y+45, r24	; 0x2d
     554:	3f c0       	rjmp	.+126    	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
     556:	20 e0       	ldi	r18, 0x00	; 0
     558:	3f ef       	ldi	r19, 0xFF	; 255
     55a:	4f e7       	ldi	r20, 0x7F	; 127
     55c:	57 e4       	ldi	r21, 0x47	; 71
     55e:	69 a5       	ldd	r22, Y+41	; 0x29
     560:	7a a5       	ldd	r23, Y+42	; 0x2a
     562:	8b a5       	ldd	r24, Y+43	; 0x2b
     564:	9c a5       	ldd	r25, Y+44	; 0x2c
     566:	0e 94 ad 0a 	call	0x155a	; 0x155a <__gesf2>
     56a:	18 16       	cp	r1, r24
     56c:	4c f5       	brge	.+82     	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
     56e:	20 e0       	ldi	r18, 0x00	; 0
     570:	30 e0       	ldi	r19, 0x00	; 0
     572:	40 e2       	ldi	r20, 0x20	; 32
     574:	51 e4       	ldi	r21, 0x41	; 65
     576:	69 85       	ldd	r22, Y+9	; 0x09
     578:	7a 85       	ldd	r23, Y+10	; 0x0a
     57a:	8b 85       	ldd	r24, Y+11	; 0x0b
     57c:	9c 85       	ldd	r25, Y+12	; 0x0c
     57e:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__mulsf3>
     582:	dc 01       	movw	r26, r24
     584:	cb 01       	movw	r24, r22
     586:	bc 01       	movw	r22, r24
     588:	cd 01       	movw	r24, r26
     58a:	0e 94 09 0a 	call	0x1412	; 0x1412 <__fixunssfsi>
     58e:	dc 01       	movw	r26, r24
     590:	cb 01       	movw	r24, r22
     592:	9e a7       	std	Y+46, r25	; 0x2e
     594:	8d a7       	std	Y+45, r24	; 0x2d
     596:	0f c0       	rjmp	.+30     	; 0x5b6 <__EEPROM_REGION_LENGTH__+0x1b6>
     598:	89 e1       	ldi	r24, 0x19	; 25
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	98 ab       	std	Y+48, r25	; 0x30
     59e:	8f a7       	std	Y+47, r24	; 0x2f
     5a0:	8f a5       	ldd	r24, Y+47	; 0x2f
     5a2:	98 a9       	ldd	r25, Y+48	; 0x30
     5a4:	01 97       	sbiw	r24, 0x01	; 1
     5a6:	f1 f7       	brne	.-4      	; 0x5a4 <__EEPROM_REGION_LENGTH__+0x1a4>
     5a8:	98 ab       	std	Y+48, r25	; 0x30
     5aa:	8f a7       	std	Y+47, r24	; 0x2f
     5ac:	8d a5       	ldd	r24, Y+45	; 0x2d
     5ae:	9e a5       	ldd	r25, Y+46	; 0x2e
     5b0:	01 97       	sbiw	r24, 0x01	; 1
     5b2:	9e a7       	std	Y+46, r25	; 0x2e
     5b4:	8d a7       	std	Y+45, r24	; 0x2d
     5b6:	8d a5       	ldd	r24, Y+45	; 0x2d
     5b8:	9e a5       	ldd	r25, Y+46	; 0x2e
     5ba:	89 2b       	or	r24, r25
     5bc:	69 f7       	brne	.-38     	; 0x598 <__EEPROM_REGION_LENGTH__+0x198>
     5be:	14 c0       	rjmp	.+40     	; 0x5e8 <__EEPROM_REGION_LENGTH__+0x1e8>
     5c0:	69 a5       	ldd	r22, Y+41	; 0x29
     5c2:	7a a5       	ldd	r23, Y+42	; 0x2a
     5c4:	8b a5       	ldd	r24, Y+43	; 0x2b
     5c6:	9c a5       	ldd	r25, Y+44	; 0x2c
     5c8:	0e 94 09 0a 	call	0x1412	; 0x1412 <__fixunssfsi>
     5cc:	dc 01       	movw	r26, r24
     5ce:	cb 01       	movw	r24, r22
     5d0:	9e a7       	std	Y+46, r25	; 0x2e
     5d2:	8d a7       	std	Y+45, r24	; 0x2d
     5d4:	8d a5       	ldd	r24, Y+45	; 0x2d
     5d6:	9e a5       	ldd	r25, Y+46	; 0x2e
     5d8:	9a ab       	std	Y+50, r25	; 0x32
     5da:	89 ab       	std	Y+49, r24	; 0x31
     5dc:	89 a9       	ldd	r24, Y+49	; 0x31
     5de:	9a a9       	ldd	r25, Y+50	; 0x32
     5e0:	01 97       	sbiw	r24, 0x01	; 1
     5e2:	f1 f7       	brne	.-4      	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
     5e4:	9a ab       	std	Y+50, r25	; 0x32
     5e6:	89 ab       	std	Y+49, r24	; 0x31
     5e8:	81 e0       	ldi	r24, 0x01	; 1
     5ea:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <write_command>
     5ee:	80 e0       	ldi	r24, 0x00	; 0
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	a0 e0       	ldi	r26, 0x00	; 0
     5f4:	b0 e4       	ldi	r27, 0x40	; 64
     5f6:	8d 87       	std	Y+13, r24	; 0x0d
     5f8:	9e 87       	std	Y+14, r25	; 0x0e
     5fa:	af 87       	std	Y+15, r26	; 0x0f
     5fc:	b8 8b       	std	Y+16, r27	; 0x10
     5fe:	20 e0       	ldi	r18, 0x00	; 0
     600:	30 e0       	ldi	r19, 0x00	; 0
     602:	4a e7       	ldi	r20, 0x7A	; 122
     604:	53 e4       	ldi	r21, 0x43	; 67
     606:	6d 85       	ldd	r22, Y+13	; 0x0d
     608:	7e 85       	ldd	r23, Y+14	; 0x0e
     60a:	8f 85       	ldd	r24, Y+15	; 0x0f
     60c:	98 89       	ldd	r25, Y+16	; 0x10
     60e:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__mulsf3>
     612:	dc 01       	movw	r26, r24
     614:	cb 01       	movw	r24, r22
     616:	8f 8f       	std	Y+31, r24	; 0x1f
     618:	98 a3       	std	Y+32, r25	; 0x20
     61a:	a9 a3       	std	Y+33, r26	; 0x21
     61c:	ba a3       	std	Y+34, r27	; 0x22
     61e:	20 e0       	ldi	r18, 0x00	; 0
     620:	30 e0       	ldi	r19, 0x00	; 0
     622:	40 e8       	ldi	r20, 0x80	; 128
     624:	5f e3       	ldi	r21, 0x3F	; 63
     626:	6f 8d       	ldd	r22, Y+31	; 0x1f
     628:	78 a1       	ldd	r23, Y+32	; 0x20
     62a:	89 a1       	ldd	r24, Y+33	; 0x21
     62c:	9a a1       	ldd	r25, Y+34	; 0x22
     62e:	0e 94 04 0a 	call	0x1408	; 0x1408 <__cmpsf2>
     632:	88 23       	and	r24, r24
     634:	2c f4       	brge	.+10     	; 0x640 <__EEPROM_REGION_LENGTH__+0x240>
     636:	81 e0       	ldi	r24, 0x01	; 1
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	9c a3       	std	Y+36, r25	; 0x24
     63c:	8b a3       	std	Y+35, r24	; 0x23
     63e:	3f c0       	rjmp	.+126    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     640:	20 e0       	ldi	r18, 0x00	; 0
     642:	3f ef       	ldi	r19, 0xFF	; 255
     644:	4f e7       	ldi	r20, 0x7F	; 127
     646:	57 e4       	ldi	r21, 0x47	; 71
     648:	6f 8d       	ldd	r22, Y+31	; 0x1f
     64a:	78 a1       	ldd	r23, Y+32	; 0x20
     64c:	89 a1       	ldd	r24, Y+33	; 0x21
     64e:	9a a1       	ldd	r25, Y+34	; 0x22
     650:	0e 94 ad 0a 	call	0x155a	; 0x155a <__gesf2>
     654:	18 16       	cp	r1, r24
     656:	4c f5       	brge	.+82     	; 0x6aa <__EEPROM_REGION_LENGTH__+0x2aa>
     658:	20 e0       	ldi	r18, 0x00	; 0
     65a:	30 e0       	ldi	r19, 0x00	; 0
     65c:	40 e2       	ldi	r20, 0x20	; 32
     65e:	51 e4       	ldi	r21, 0x41	; 65
     660:	6d 85       	ldd	r22, Y+13	; 0x0d
     662:	7e 85       	ldd	r23, Y+14	; 0x0e
     664:	8f 85       	ldd	r24, Y+15	; 0x0f
     666:	98 89       	ldd	r25, Y+16	; 0x10
     668:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__mulsf3>
     66c:	dc 01       	movw	r26, r24
     66e:	cb 01       	movw	r24, r22
     670:	bc 01       	movw	r22, r24
     672:	cd 01       	movw	r24, r26
     674:	0e 94 09 0a 	call	0x1412	; 0x1412 <__fixunssfsi>
     678:	dc 01       	movw	r26, r24
     67a:	cb 01       	movw	r24, r22
     67c:	9c a3       	std	Y+36, r25	; 0x24
     67e:	8b a3       	std	Y+35, r24	; 0x23
     680:	0f c0       	rjmp	.+30     	; 0x6a0 <__EEPROM_REGION_LENGTH__+0x2a0>
     682:	89 e1       	ldi	r24, 0x19	; 25
     684:	90 e0       	ldi	r25, 0x00	; 0
     686:	9e a3       	std	Y+38, r25	; 0x26
     688:	8d a3       	std	Y+37, r24	; 0x25
     68a:	8d a1       	ldd	r24, Y+37	; 0x25
     68c:	9e a1       	ldd	r25, Y+38	; 0x26
     68e:	01 97       	sbiw	r24, 0x01	; 1
     690:	f1 f7       	brne	.-4      	; 0x68e <__EEPROM_REGION_LENGTH__+0x28e>
     692:	9e a3       	std	Y+38, r25	; 0x26
     694:	8d a3       	std	Y+37, r24	; 0x25
     696:	8b a1       	ldd	r24, Y+35	; 0x23
     698:	9c a1       	ldd	r25, Y+36	; 0x24
     69a:	01 97       	sbiw	r24, 0x01	; 1
     69c:	9c a3       	std	Y+36, r25	; 0x24
     69e:	8b a3       	std	Y+35, r24	; 0x23
     6a0:	8b a1       	ldd	r24, Y+35	; 0x23
     6a2:	9c a1       	ldd	r25, Y+36	; 0x24
     6a4:	89 2b       	or	r24, r25
     6a6:	69 f7       	brne	.-38     	; 0x682 <__EEPROM_REGION_LENGTH__+0x282>
     6a8:	14 c0       	rjmp	.+40     	; 0x6d2 <__EEPROM_REGION_LENGTH__+0x2d2>
     6aa:	6f 8d       	ldd	r22, Y+31	; 0x1f
     6ac:	78 a1       	ldd	r23, Y+32	; 0x20
     6ae:	89 a1       	ldd	r24, Y+33	; 0x21
     6b0:	9a a1       	ldd	r25, Y+34	; 0x22
     6b2:	0e 94 09 0a 	call	0x1412	; 0x1412 <__fixunssfsi>
     6b6:	dc 01       	movw	r26, r24
     6b8:	cb 01       	movw	r24, r22
     6ba:	9c a3       	std	Y+36, r25	; 0x24
     6bc:	8b a3       	std	Y+35, r24	; 0x23
     6be:	8b a1       	ldd	r24, Y+35	; 0x23
     6c0:	9c a1       	ldd	r25, Y+36	; 0x24
     6c2:	98 a7       	std	Y+40, r25	; 0x28
     6c4:	8f a3       	std	Y+39, r24	; 0x27
     6c6:	8f a1       	ldd	r24, Y+39	; 0x27
     6c8:	98 a5       	ldd	r25, Y+40	; 0x28
     6ca:	01 97       	sbiw	r24, 0x01	; 1
     6cc:	f1 f7       	brne	.-4      	; 0x6ca <__EEPROM_REGION_LENGTH__+0x2ca>
     6ce:	98 a7       	std	Y+40, r25	; 0x28
     6d0:	8f a3       	std	Y+39, r24	; 0x27
     6d2:	86 e0       	ldi	r24, 0x06	; 6
     6d4:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <write_command>
     6d8:	80 e0       	ldi	r24, 0x00	; 0
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	a0 e8       	ldi	r26, 0x80	; 128
     6de:	bf e3       	ldi	r27, 0x3F	; 63
     6e0:	89 8b       	std	Y+17, r24	; 0x11
     6e2:	9a 8b       	std	Y+18, r25	; 0x12
     6e4:	ab 8b       	std	Y+19, r26	; 0x13
     6e6:	bc 8b       	std	Y+20, r27	; 0x14
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	4a e7       	ldi	r20, 0x7A	; 122
     6ee:	53 e4       	ldi	r21, 0x43	; 67
     6f0:	69 89       	ldd	r22, Y+17	; 0x11
     6f2:	7a 89       	ldd	r23, Y+18	; 0x12
     6f4:	8b 89       	ldd	r24, Y+19	; 0x13
     6f6:	9c 89       	ldd	r25, Y+20	; 0x14
     6f8:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__mulsf3>
     6fc:	dc 01       	movw	r26, r24
     6fe:	cb 01       	movw	r24, r22
     700:	8d 8b       	std	Y+21, r24	; 0x15
     702:	9e 8b       	std	Y+22, r25	; 0x16
     704:	af 8b       	std	Y+23, r26	; 0x17
     706:	b8 8f       	std	Y+24, r27	; 0x18
     708:	20 e0       	ldi	r18, 0x00	; 0
     70a:	30 e0       	ldi	r19, 0x00	; 0
     70c:	40 e8       	ldi	r20, 0x80	; 128
     70e:	5f e3       	ldi	r21, 0x3F	; 63
     710:	6d 89       	ldd	r22, Y+21	; 0x15
     712:	7e 89       	ldd	r23, Y+22	; 0x16
     714:	8f 89       	ldd	r24, Y+23	; 0x17
     716:	98 8d       	ldd	r25, Y+24	; 0x18
     718:	0e 94 04 0a 	call	0x1408	; 0x1408 <__cmpsf2>
     71c:	88 23       	and	r24, r24
     71e:	2c f4       	brge	.+10     	; 0x72a <__EEPROM_REGION_LENGTH__+0x32a>
     720:	81 e0       	ldi	r24, 0x01	; 1
     722:	90 e0       	ldi	r25, 0x00	; 0
     724:	9a 8f       	std	Y+26, r25	; 0x1a
     726:	89 8f       	std	Y+25, r24	; 0x19
     728:	3f c0       	rjmp	.+126    	; 0x7a8 <__EEPROM_REGION_LENGTH__+0x3a8>
     72a:	20 e0       	ldi	r18, 0x00	; 0
     72c:	3f ef       	ldi	r19, 0xFF	; 255
     72e:	4f e7       	ldi	r20, 0x7F	; 127
     730:	57 e4       	ldi	r21, 0x47	; 71
     732:	6d 89       	ldd	r22, Y+21	; 0x15
     734:	7e 89       	ldd	r23, Y+22	; 0x16
     736:	8f 89       	ldd	r24, Y+23	; 0x17
     738:	98 8d       	ldd	r25, Y+24	; 0x18
     73a:	0e 94 ad 0a 	call	0x155a	; 0x155a <__gesf2>
     73e:	18 16       	cp	r1, r24
     740:	4c f5       	brge	.+82     	; 0x794 <__EEPROM_REGION_LENGTH__+0x394>
     742:	20 e0       	ldi	r18, 0x00	; 0
     744:	30 e0       	ldi	r19, 0x00	; 0
     746:	40 e2       	ldi	r20, 0x20	; 32
     748:	51 e4       	ldi	r21, 0x41	; 65
     74a:	69 89       	ldd	r22, Y+17	; 0x11
     74c:	7a 89       	ldd	r23, Y+18	; 0x12
     74e:	8b 89       	ldd	r24, Y+19	; 0x13
     750:	9c 89       	ldd	r25, Y+20	; 0x14
     752:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__mulsf3>
     756:	dc 01       	movw	r26, r24
     758:	cb 01       	movw	r24, r22
     75a:	bc 01       	movw	r22, r24
     75c:	cd 01       	movw	r24, r26
     75e:	0e 94 09 0a 	call	0x1412	; 0x1412 <__fixunssfsi>
     762:	dc 01       	movw	r26, r24
     764:	cb 01       	movw	r24, r22
     766:	9a 8f       	std	Y+26, r25	; 0x1a
     768:	89 8f       	std	Y+25, r24	; 0x19
     76a:	0f c0       	rjmp	.+30     	; 0x78a <__EEPROM_REGION_LENGTH__+0x38a>
     76c:	89 e1       	ldi	r24, 0x19	; 25
     76e:	90 e0       	ldi	r25, 0x00	; 0
     770:	9c 8f       	std	Y+28, r25	; 0x1c
     772:	8b 8f       	std	Y+27, r24	; 0x1b
     774:	8b 8d       	ldd	r24, Y+27	; 0x1b
     776:	9c 8d       	ldd	r25, Y+28	; 0x1c
     778:	01 97       	sbiw	r24, 0x01	; 1
     77a:	f1 f7       	brne	.-4      	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
     77c:	9c 8f       	std	Y+28, r25	; 0x1c
     77e:	8b 8f       	std	Y+27, r24	; 0x1b
     780:	89 8d       	ldd	r24, Y+25	; 0x19
     782:	9a 8d       	ldd	r25, Y+26	; 0x1a
     784:	01 97       	sbiw	r24, 0x01	; 1
     786:	9a 8f       	std	Y+26, r25	; 0x1a
     788:	89 8f       	std	Y+25, r24	; 0x19
     78a:	89 8d       	ldd	r24, Y+25	; 0x19
     78c:	9a 8d       	ldd	r25, Y+26	; 0x1a
     78e:	89 2b       	or	r24, r25
     790:	69 f7       	brne	.-38     	; 0x76c <__EEPROM_REGION_LENGTH__+0x36c>
     792:	14 c0       	rjmp	.+40     	; 0x7bc <__EEPROM_REGION_LENGTH__+0x3bc>
     794:	6d 89       	ldd	r22, Y+21	; 0x15
     796:	7e 89       	ldd	r23, Y+22	; 0x16
     798:	8f 89       	ldd	r24, Y+23	; 0x17
     79a:	98 8d       	ldd	r25, Y+24	; 0x18
     79c:	0e 94 09 0a 	call	0x1412	; 0x1412 <__fixunssfsi>
     7a0:	dc 01       	movw	r26, r24
     7a2:	cb 01       	movw	r24, r22
     7a4:	9a 8f       	std	Y+26, r25	; 0x1a
     7a6:	89 8f       	std	Y+25, r24	; 0x19
     7a8:	89 8d       	ldd	r24, Y+25	; 0x19
     7aa:	9a 8d       	ldd	r25, Y+26	; 0x1a
     7ac:	9e 8f       	std	Y+30, r25	; 0x1e
     7ae:	8d 8f       	std	Y+29, r24	; 0x1d
     7b0:	8d 8d       	ldd	r24, Y+29	; 0x1d
     7b2:	9e 8d       	ldd	r25, Y+30	; 0x1e
     7b4:	01 97       	sbiw	r24, 0x01	; 1
     7b6:	f1 f7       	brne	.-4      	; 0x7b4 <__EEPROM_REGION_LENGTH__+0x3b4>
     7b8:	9e 8f       	std	Y+30, r25	; 0x1e
     7ba:	8d 8f       	std	Y+29, r24	; 0x1d
     7bc:	00 00       	nop
     7be:	ca 5b       	subi	r28, 0xBA	; 186
     7c0:	df 4f       	sbci	r29, 0xFF	; 255
     7c2:	0f b6       	in	r0, 0x3f	; 63
     7c4:	f8 94       	cli
     7c6:	de bf       	out	0x3e, r29	; 62
     7c8:	0f be       	out	0x3f, r0	; 63
     7ca:	cd bf       	out	0x3d, r28	; 61
     7cc:	df 91       	pop	r29
     7ce:	cf 91       	pop	r28
     7d0:	1f 91       	pop	r17
     7d2:	0f 91       	pop	r16
     7d4:	08 95       	ret

000007d6 <write_command>:
     7d6:	cf 93       	push	r28
     7d8:	df 93       	push	r29
     7da:	1f 92       	push	r1
     7dc:	cd b7       	in	r28, 0x3d	; 61
     7de:	de b7       	in	r29, 0x3e	; 62
     7e0:	89 83       	std	Y+1, r24	; 0x01
     7e2:	8b e3       	ldi	r24, 0x3B	; 59
     7e4:	90 e0       	ldi	r25, 0x00	; 0
     7e6:	2b e3       	ldi	r18, 0x3B	; 59
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	f9 01       	movw	r30, r18
     7ec:	20 81       	ld	r18, Z
     7ee:	2f 7d       	andi	r18, 0xDF	; 223
     7f0:	fc 01       	movw	r30, r24
     7f2:	20 83       	st	Z, r18
     7f4:	8b e3       	ldi	r24, 0x3B	; 59
     7f6:	90 e0       	ldi	r25, 0x00	; 0
     7f8:	2b e3       	ldi	r18, 0x3B	; 59
     7fa:	30 e0       	ldi	r19, 0x00	; 0
     7fc:	f9 01       	movw	r30, r18
     7fe:	20 81       	ld	r18, Z
     800:	2f 7b       	andi	r18, 0xBF	; 191
     802:	fc 01       	movw	r30, r24
     804:	20 83       	st	Z, r18
     806:	85 e3       	ldi	r24, 0x35	; 53
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	29 81       	ldd	r18, Y+1	; 0x01
     80c:	fc 01       	movw	r30, r24
     80e:	20 83       	st	Z, r18
     810:	0e 94 76 04 	call	0x8ec	; 0x8ec <enable_tick>
     814:	00 00       	nop
     816:	0f 90       	pop	r0
     818:	df 91       	pop	r29
     81a:	cf 91       	pop	r28
     81c:	08 95       	ret

0000081e <write_char>:
     81e:	cf 93       	push	r28
     820:	df 93       	push	r29
     822:	1f 92       	push	r1
     824:	cd b7       	in	r28, 0x3d	; 61
     826:	de b7       	in	r29, 0x3e	; 62
     828:	89 83       	std	Y+1, r24	; 0x01
     82a:	8b e3       	ldi	r24, 0x3B	; 59
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	2b e3       	ldi	r18, 0x3B	; 59
     830:	30 e0       	ldi	r19, 0x00	; 0
     832:	f9 01       	movw	r30, r18
     834:	20 81       	ld	r18, Z
     836:	20 62       	ori	r18, 0x20	; 32
     838:	fc 01       	movw	r30, r24
     83a:	20 83       	st	Z, r18
     83c:	8b e3       	ldi	r24, 0x3B	; 59
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	2b e3       	ldi	r18, 0x3B	; 59
     842:	30 e0       	ldi	r19, 0x00	; 0
     844:	f9 01       	movw	r30, r18
     846:	20 81       	ld	r18, Z
     848:	2f 7b       	andi	r18, 0xBF	; 191
     84a:	fc 01       	movw	r30, r24
     84c:	20 83       	st	Z, r18
     84e:	85 e3       	ldi	r24, 0x35	; 53
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	29 81       	ldd	r18, Y+1	; 0x01
     854:	fc 01       	movw	r30, r24
     856:	20 83       	st	Z, r18
     858:	0e 94 76 04 	call	0x8ec	; 0x8ec <enable_tick>
     85c:	00 00       	nop
     85e:	0f 90       	pop	r0
     860:	df 91       	pop	r29
     862:	cf 91       	pop	r28
     864:	08 95       	ret

00000866 <write_string>:
     866:	cf 93       	push	r28
     868:	df 93       	push	r29
     86a:	00 d0       	rcall	.+0      	; 0x86c <write_string+0x6>
     86c:	00 d0       	rcall	.+0      	; 0x86e <write_string+0x8>
     86e:	cd b7       	in	r28, 0x3d	; 61
     870:	de b7       	in	r29, 0x3e	; 62
     872:	9a 83       	std	Y+2, r25	; 0x02
     874:	89 83       	std	Y+1, r24	; 0x01
     876:	6b 83       	std	Y+3, r22	; 0x03
     878:	4c 83       	std	Y+4, r20	; 0x04
     87a:	2a c0       	rjmp	.+84     	; 0x8d0 <write_string+0x6a>
     87c:	8b 81       	ldd	r24, Y+3	; 0x03
     87e:	88 23       	and	r24, r24
     880:	29 f4       	brne	.+10     	; 0x88c <write_string+0x26>
     882:	8c 81       	ldd	r24, Y+4	; 0x04
     884:	80 58       	subi	r24, 0x80	; 128
     886:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <write_command>
     88a:	07 c0       	rjmp	.+14     	; 0x89a <write_string+0x34>
     88c:	8b 81       	ldd	r24, Y+3	; 0x03
     88e:	81 30       	cpi	r24, 0x01	; 1
     890:	21 f4       	brne	.+8      	; 0x89a <write_string+0x34>
     892:	8c 81       	ldd	r24, Y+4	; 0x04
     894:	80 54       	subi	r24, 0x40	; 64
     896:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <write_command>
     89a:	89 81       	ldd	r24, Y+1	; 0x01
     89c:	9a 81       	ldd	r25, Y+2	; 0x02
     89e:	fc 01       	movw	r30, r24
     8a0:	80 81       	ld	r24, Z
     8a2:	0e 94 0f 04 	call	0x81e	; 0x81e <write_char>
     8a6:	89 81       	ldd	r24, Y+1	; 0x01
     8a8:	9a 81       	ldd	r25, Y+2	; 0x02
     8aa:	01 96       	adiw	r24, 0x01	; 1
     8ac:	9a 83       	std	Y+2, r25	; 0x02
     8ae:	89 83       	std	Y+1, r24	; 0x01
     8b0:	8c 81       	ldd	r24, Y+4	; 0x04
     8b2:	8f 5f       	subi	r24, 0xFF	; 255
     8b4:	8c 83       	std	Y+4, r24	; 0x04
     8b6:	8b 81       	ldd	r24, Y+3	; 0x03
     8b8:	88 23       	and	r24, r24
     8ba:	51 f4       	brne	.+20     	; 0x8d0 <write_string+0x6a>
     8bc:	8c 81       	ldd	r24, Y+4	; 0x04
     8be:	80 31       	cpi	r24, 0x10	; 16
     8c0:	39 f4       	brne	.+14     	; 0x8d0 <write_string+0x6a>
     8c2:	81 e0       	ldi	r24, 0x01	; 1
     8c4:	8b 83       	std	Y+3, r24	; 0x03
     8c6:	1c 82       	std	Y+4, r1	; 0x04
     8c8:	8c 81       	ldd	r24, Y+4	; 0x04
     8ca:	80 54       	subi	r24, 0x40	; 64
     8cc:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <write_command>
     8d0:	89 81       	ldd	r24, Y+1	; 0x01
     8d2:	9a 81       	ldd	r25, Y+2	; 0x02
     8d4:	fc 01       	movw	r30, r24
     8d6:	80 81       	ld	r24, Z
     8d8:	88 23       	and	r24, r24
     8da:	81 f6       	brne	.-96     	; 0x87c <write_string+0x16>
     8dc:	00 00       	nop
     8de:	0f 90       	pop	r0
     8e0:	0f 90       	pop	r0
     8e2:	0f 90       	pop	r0
     8e4:	0f 90       	pop	r0
     8e6:	df 91       	pop	r29
     8e8:	cf 91       	pop	r28
     8ea:	08 95       	ret

000008ec <enable_tick>:
     8ec:	cf 93       	push	r28
     8ee:	df 93       	push	r29
     8f0:	cd b7       	in	r28, 0x3d	; 61
     8f2:	de b7       	in	r29, 0x3e	; 62
     8f4:	2e 97       	sbiw	r28, 0x0e	; 14
     8f6:	0f b6       	in	r0, 0x3f	; 63
     8f8:	f8 94       	cli
     8fa:	de bf       	out	0x3e, r29	; 62
     8fc:	0f be       	out	0x3f, r0	; 63
     8fe:	cd bf       	out	0x3d, r28	; 61
     900:	8b e3       	ldi	r24, 0x3B	; 59
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	2b e3       	ldi	r18, 0x3B	; 59
     906:	30 e0       	ldi	r19, 0x00	; 0
     908:	f9 01       	movw	r30, r18
     90a:	20 81       	ld	r18, Z
     90c:	20 68       	ori	r18, 0x80	; 128
     90e:	fc 01       	movw	r30, r24
     910:	20 83       	st	Z, r18
     912:	80 e0       	ldi	r24, 0x00	; 0
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	a0 e8       	ldi	r26, 0x80	; 128
     918:	bf e3       	ldi	r27, 0x3F	; 63
     91a:	89 83       	std	Y+1, r24	; 0x01
     91c:	9a 83       	std	Y+2, r25	; 0x02
     91e:	ab 83       	std	Y+3, r26	; 0x03
     920:	bc 83       	std	Y+4, r27	; 0x04
     922:	20 e0       	ldi	r18, 0x00	; 0
     924:	30 e0       	ldi	r19, 0x00	; 0
     926:	4a e7       	ldi	r20, 0x7A	; 122
     928:	53 e4       	ldi	r21, 0x43	; 67
     92a:	69 81       	ldd	r22, Y+1	; 0x01
     92c:	7a 81       	ldd	r23, Y+2	; 0x02
     92e:	8b 81       	ldd	r24, Y+3	; 0x03
     930:	9c 81       	ldd	r25, Y+4	; 0x04
     932:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__mulsf3>
     936:	dc 01       	movw	r26, r24
     938:	cb 01       	movw	r24, r22
     93a:	8d 83       	std	Y+5, r24	; 0x05
     93c:	9e 83       	std	Y+6, r25	; 0x06
     93e:	af 83       	std	Y+7, r26	; 0x07
     940:	b8 87       	std	Y+8, r27	; 0x08
     942:	20 e0       	ldi	r18, 0x00	; 0
     944:	30 e0       	ldi	r19, 0x00	; 0
     946:	40 e8       	ldi	r20, 0x80	; 128
     948:	5f e3       	ldi	r21, 0x3F	; 63
     94a:	6d 81       	ldd	r22, Y+5	; 0x05
     94c:	7e 81       	ldd	r23, Y+6	; 0x06
     94e:	8f 81       	ldd	r24, Y+7	; 0x07
     950:	98 85       	ldd	r25, Y+8	; 0x08
     952:	0e 94 04 0a 	call	0x1408	; 0x1408 <__cmpsf2>
     956:	88 23       	and	r24, r24
     958:	2c f4       	brge	.+10     	; 0x964 <enable_tick+0x78>
     95a:	81 e0       	ldi	r24, 0x01	; 1
     95c:	90 e0       	ldi	r25, 0x00	; 0
     95e:	9a 87       	std	Y+10, r25	; 0x0a
     960:	89 87       	std	Y+9, r24	; 0x09
     962:	3f c0       	rjmp	.+126    	; 0x9e2 <enable_tick+0xf6>
     964:	20 e0       	ldi	r18, 0x00	; 0
     966:	3f ef       	ldi	r19, 0xFF	; 255
     968:	4f e7       	ldi	r20, 0x7F	; 127
     96a:	57 e4       	ldi	r21, 0x47	; 71
     96c:	6d 81       	ldd	r22, Y+5	; 0x05
     96e:	7e 81       	ldd	r23, Y+6	; 0x06
     970:	8f 81       	ldd	r24, Y+7	; 0x07
     972:	98 85       	ldd	r25, Y+8	; 0x08
     974:	0e 94 ad 0a 	call	0x155a	; 0x155a <__gesf2>
     978:	18 16       	cp	r1, r24
     97a:	4c f5       	brge	.+82     	; 0x9ce <enable_tick+0xe2>
     97c:	20 e0       	ldi	r18, 0x00	; 0
     97e:	30 e0       	ldi	r19, 0x00	; 0
     980:	40 e2       	ldi	r20, 0x20	; 32
     982:	51 e4       	ldi	r21, 0x41	; 65
     984:	69 81       	ldd	r22, Y+1	; 0x01
     986:	7a 81       	ldd	r23, Y+2	; 0x02
     988:	8b 81       	ldd	r24, Y+3	; 0x03
     98a:	9c 81       	ldd	r25, Y+4	; 0x04
     98c:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__mulsf3>
     990:	dc 01       	movw	r26, r24
     992:	cb 01       	movw	r24, r22
     994:	bc 01       	movw	r22, r24
     996:	cd 01       	movw	r24, r26
     998:	0e 94 09 0a 	call	0x1412	; 0x1412 <__fixunssfsi>
     99c:	dc 01       	movw	r26, r24
     99e:	cb 01       	movw	r24, r22
     9a0:	9a 87       	std	Y+10, r25	; 0x0a
     9a2:	89 87       	std	Y+9, r24	; 0x09
     9a4:	0f c0       	rjmp	.+30     	; 0x9c4 <enable_tick+0xd8>
     9a6:	89 e1       	ldi	r24, 0x19	; 25
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	9c 87       	std	Y+12, r25	; 0x0c
     9ac:	8b 87       	std	Y+11, r24	; 0x0b
     9ae:	8b 85       	ldd	r24, Y+11	; 0x0b
     9b0:	9c 85       	ldd	r25, Y+12	; 0x0c
     9b2:	01 97       	sbiw	r24, 0x01	; 1
     9b4:	f1 f7       	brne	.-4      	; 0x9b2 <enable_tick+0xc6>
     9b6:	9c 87       	std	Y+12, r25	; 0x0c
     9b8:	8b 87       	std	Y+11, r24	; 0x0b
     9ba:	89 85       	ldd	r24, Y+9	; 0x09
     9bc:	9a 85       	ldd	r25, Y+10	; 0x0a
     9be:	01 97       	sbiw	r24, 0x01	; 1
     9c0:	9a 87       	std	Y+10, r25	; 0x0a
     9c2:	89 87       	std	Y+9, r24	; 0x09
     9c4:	89 85       	ldd	r24, Y+9	; 0x09
     9c6:	9a 85       	ldd	r25, Y+10	; 0x0a
     9c8:	89 2b       	or	r24, r25
     9ca:	69 f7       	brne	.-38     	; 0x9a6 <enable_tick+0xba>
     9cc:	14 c0       	rjmp	.+40     	; 0x9f6 <enable_tick+0x10a>
     9ce:	6d 81       	ldd	r22, Y+5	; 0x05
     9d0:	7e 81       	ldd	r23, Y+6	; 0x06
     9d2:	8f 81       	ldd	r24, Y+7	; 0x07
     9d4:	98 85       	ldd	r25, Y+8	; 0x08
     9d6:	0e 94 09 0a 	call	0x1412	; 0x1412 <__fixunssfsi>
     9da:	dc 01       	movw	r26, r24
     9dc:	cb 01       	movw	r24, r22
     9de:	9a 87       	std	Y+10, r25	; 0x0a
     9e0:	89 87       	std	Y+9, r24	; 0x09
     9e2:	89 85       	ldd	r24, Y+9	; 0x09
     9e4:	9a 85       	ldd	r25, Y+10	; 0x0a
     9e6:	9e 87       	std	Y+14, r25	; 0x0e
     9e8:	8d 87       	std	Y+13, r24	; 0x0d
     9ea:	8d 85       	ldd	r24, Y+13	; 0x0d
     9ec:	9e 85       	ldd	r25, Y+14	; 0x0e
     9ee:	01 97       	sbiw	r24, 0x01	; 1
     9f0:	f1 f7       	brne	.-4      	; 0x9ee <enable_tick+0x102>
     9f2:	9e 87       	std	Y+14, r25	; 0x0e
     9f4:	8d 87       	std	Y+13, r24	; 0x0d
     9f6:	8b e3       	ldi	r24, 0x3B	; 59
     9f8:	90 e0       	ldi	r25, 0x00	; 0
     9fa:	2b e3       	ldi	r18, 0x3B	; 59
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	f9 01       	movw	r30, r18
     a00:	20 81       	ld	r18, Z
     a02:	2f 77       	andi	r18, 0x7F	; 127
     a04:	fc 01       	movw	r30, r24
     a06:	20 83       	st	Z, r18
     a08:	00 00       	nop
     a0a:	2e 96       	adiw	r28, 0x0e	; 14
     a0c:	0f b6       	in	r0, 0x3f	; 63
     a0e:	f8 94       	cli
     a10:	de bf       	out	0x3e, r29	; 62
     a12:	0f be       	out	0x3f, r0	; 63
     a14:	cd bf       	out	0x3d, r28	; 61
     a16:	df 91       	pop	r29
     a18:	cf 91       	pop	r28
     a1a:	08 95       	ret

00000a1c <position_xy>:
     a1c:	cf 93       	push	r28
     a1e:	df 93       	push	r29
     a20:	00 d0       	rcall	.+0      	; 0xa22 <position_xy+0x6>
     a22:	1f 92       	push	r1
     a24:	cd b7       	in	r28, 0x3d	; 61
     a26:	de b7       	in	r29, 0x3e	; 62
     a28:	8a 83       	std	Y+2, r24	; 0x02
     a2a:	6b 83       	std	Y+3, r22	; 0x03
     a2c:	8a 81       	ldd	r24, Y+2	; 0x02
     a2e:	88 23       	and	r24, r24
     a30:	69 f4       	brne	.+26     	; 0xa4c <position_xy+0x30>
     a32:	80 e8       	ldi	r24, 0x80	; 128
     a34:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <write_command>
     a38:	8a 81       	ldd	r24, Y+2	; 0x02
     a3a:	98 2f       	mov	r25, r24
     a3c:	92 95       	swap	r25
     a3e:	99 0f       	add	r25, r25
     a40:	99 0f       	add	r25, r25
     a42:	90 7c       	andi	r25, 0xC0	; 192
     a44:	8b 81       	ldd	r24, Y+3	; 0x03
     a46:	89 0f       	add	r24, r25
     a48:	89 83       	std	Y+1, r24	; 0x01
     a4a:	0f c0       	rjmp	.+30     	; 0xa6a <position_xy+0x4e>
     a4c:	8a 81       	ldd	r24, Y+2	; 0x02
     a4e:	81 30       	cpi	r24, 0x01	; 1
     a50:	61 f4       	brne	.+24     	; 0xa6a <position_xy+0x4e>
     a52:	80 ec       	ldi	r24, 0xC0	; 192
     a54:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <write_command>
     a58:	8a 81       	ldd	r24, Y+2	; 0x02
     a5a:	98 2f       	mov	r25, r24
     a5c:	92 95       	swap	r25
     a5e:	99 0f       	add	r25, r25
     a60:	99 0f       	add	r25, r25
     a62:	90 7c       	andi	r25, 0xC0	; 192
     a64:	8b 81       	ldd	r24, Y+3	; 0x03
     a66:	89 0f       	add	r24, r25
     a68:	89 83       	std	Y+1, r24	; 0x01
     a6a:	00 00       	nop
     a6c:	0f 90       	pop	r0
     a6e:	0f 90       	pop	r0
     a70:	0f 90       	pop	r0
     a72:	df 91       	pop	r29
     a74:	cf 91       	pop	r28
     a76:	08 95       	ret

00000a78 <send_number_lcd>:
void send_number_lcd(U16 number , U8 digits)
{
     a78:	cf 93       	push	r28
     a7a:	df 93       	push	r29
     a7c:	cd b7       	in	r28, 0x3d	; 61
     a7e:	de b7       	in	r29, 0x3e	; 62
     a80:	2b 97       	sbiw	r28, 0x0b	; 11
     a82:	0f b6       	in	r0, 0x3f	; 63
     a84:	f8 94       	cli
     a86:	de bf       	out	0x3e, r29	; 62
     a88:	0f be       	out	0x3f, r0	; 63
     a8a:	cd bf       	out	0x3d, r28	; 61
     a8c:	9a 87       	std	Y+10, r25	; 0x0a
     a8e:	89 87       	std	Y+9, r24	; 0x09
     a90:	6b 87       	std	Y+11, r22	; 0x0b
	U8 x,y,z,w,e,r,t,u;
	switch(digits)
     a92:	8b 85       	ldd	r24, Y+11	; 0x0b
     a94:	88 2f       	mov	r24, r24
     a96:	90 e0       	ldi	r25, 0x00	; 0
     a98:	83 30       	cpi	r24, 0x03	; 3
     a9a:	91 05       	cpc	r25, r1
     a9c:	21 f0       	breq	.+8      	; 0xaa6 <send_number_lcd+0x2e>
     a9e:	05 97       	sbiw	r24, 0x05	; 5
     aa0:	09 f4       	brne	.+2      	; 0xaa4 <send_number_lcd+0x2c>
     aa2:	76 c0       	rjmp	.+236    	; 0xb90 <send_number_lcd+0x118>
	   r=  ((number%10000)%1000)/100;      r= r+48;		   write_char(r);
	   t = ((number%10000)%1000)%100/10;   t= t+48;		   write_char(t);
	   u = ((number%10000)%1000)%100%10;   u= u+48;		   write_char(u);
	   break;
	}
}
     aa4:	f5 c1       	rjmp	.+1002   	; 0xe90 <send_number_lcd+0x418>
	switch(digits)
	{
		
	   case 3:
	   
	   x = (number/100);       x=x+48;          write_char(x);
     aa6:	89 85       	ldd	r24, Y+9	; 0x09
     aa8:	9a 85       	ldd	r25, Y+10	; 0x0a
     aaa:	96 95       	lsr	r25
     aac:	87 95       	ror	r24
     aae:	96 95       	lsr	r25
     ab0:	87 95       	ror	r24
     ab2:	9c 01       	movw	r18, r24
     ab4:	ab e7       	ldi	r26, 0x7B	; 123
     ab6:	b4 e1       	ldi	r27, 0x14	; 20
     ab8:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     abc:	96 95       	lsr	r25
     abe:	87 95       	ror	r24
     ac0:	89 83       	std	Y+1, r24	; 0x01
     ac2:	89 81       	ldd	r24, Y+1	; 0x01
     ac4:	80 5d       	subi	r24, 0xD0	; 208
     ac6:	89 83       	std	Y+1, r24	; 0x01
     ac8:	89 81       	ldd	r24, Y+1	; 0x01
     aca:	0e 94 0f 04 	call	0x81e	; 0x81e <write_char>
	   y = (number%100)/10;   y = y+48;         write_char(y);
     ace:	49 85       	ldd	r20, Y+9	; 0x09
     ad0:	5a 85       	ldd	r21, Y+10	; 0x0a
     ad2:	ca 01       	movw	r24, r20
     ad4:	96 95       	lsr	r25
     ad6:	87 95       	ror	r24
     ad8:	96 95       	lsr	r25
     ada:	87 95       	ror	r24
     adc:	9c 01       	movw	r18, r24
     ade:	ab e7       	ldi	r26, 0x7B	; 123
     ae0:	b4 e1       	ldi	r27, 0x14	; 20
     ae2:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     ae6:	96 95       	lsr	r25
     ae8:	87 95       	ror	r24
     aea:	64 e6       	ldi	r22, 0x64	; 100
     aec:	68 9f       	mul	r22, r24
     aee:	90 01       	movw	r18, r0
     af0:	69 9f       	mul	r22, r25
     af2:	30 0d       	add	r19, r0
     af4:	11 24       	eor	r1, r1
     af6:	ca 01       	movw	r24, r20
     af8:	82 1b       	sub	r24, r18
     afa:	93 0b       	sbc	r25, r19
     afc:	9c 01       	movw	r18, r24
     afe:	ad ec       	ldi	r26, 0xCD	; 205
     b00:	bc ec       	ldi	r27, 0xCC	; 204
     b02:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     b06:	96 95       	lsr	r25
     b08:	87 95       	ror	r24
     b0a:	96 95       	lsr	r25
     b0c:	87 95       	ror	r24
     b0e:	96 95       	lsr	r25
     b10:	87 95       	ror	r24
     b12:	8a 83       	std	Y+2, r24	; 0x02
     b14:	8a 81       	ldd	r24, Y+2	; 0x02
     b16:	80 5d       	subi	r24, 0xD0	; 208
     b18:	8a 83       	std	Y+2, r24	; 0x02
     b1a:	8a 81       	ldd	r24, Y+2	; 0x02
     b1c:	0e 94 0f 04 	call	0x81e	; 0x81e <write_char>
	   z = (number%100)%10;   z= z+48;          write_char(z);
     b20:	e9 85       	ldd	r30, Y+9	; 0x09
     b22:	fa 85       	ldd	r31, Y+10	; 0x0a
     b24:	cf 01       	movw	r24, r30
     b26:	96 95       	lsr	r25
     b28:	87 95       	ror	r24
     b2a:	96 95       	lsr	r25
     b2c:	87 95       	ror	r24
     b2e:	9c 01       	movw	r18, r24
     b30:	ab e7       	ldi	r26, 0x7B	; 123
     b32:	b4 e1       	ldi	r27, 0x14	; 20
     b34:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     b38:	ac 01       	movw	r20, r24
     b3a:	56 95       	lsr	r21
     b3c:	47 95       	ror	r20
     b3e:	24 e6       	ldi	r18, 0x64	; 100
     b40:	24 9f       	mul	r18, r20
     b42:	c0 01       	movw	r24, r0
     b44:	25 9f       	mul	r18, r21
     b46:	90 0d       	add	r25, r0
     b48:	11 24       	eor	r1, r1
     b4a:	af 01       	movw	r20, r30
     b4c:	48 1b       	sub	r20, r24
     b4e:	59 0b       	sbc	r21, r25
     b50:	9a 01       	movw	r18, r20
     b52:	ad ec       	ldi	r26, 0xCD	; 205
     b54:	bc ec       	ldi	r27, 0xCC	; 204
     b56:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     b5a:	96 95       	lsr	r25
     b5c:	87 95       	ror	r24
     b5e:	96 95       	lsr	r25
     b60:	87 95       	ror	r24
     b62:	96 95       	lsr	r25
     b64:	87 95       	ror	r24
     b66:	88 0f       	add	r24, r24
     b68:	99 1f       	adc	r25, r25
     b6a:	9c 01       	movw	r18, r24
     b6c:	22 0f       	add	r18, r18
     b6e:	33 1f       	adc	r19, r19
     b70:	22 0f       	add	r18, r18
     b72:	33 1f       	adc	r19, r19
     b74:	82 0f       	add	r24, r18
     b76:	93 1f       	adc	r25, r19
     b78:	9a 01       	movw	r18, r20
     b7a:	28 1b       	sub	r18, r24
     b7c:	39 0b       	sbc	r19, r25
     b7e:	c9 01       	movw	r24, r18
     b80:	8b 83       	std	Y+3, r24	; 0x03
     b82:	8b 81       	ldd	r24, Y+3	; 0x03
     b84:	80 5d       	subi	r24, 0xD0	; 208
     b86:	8b 83       	std	Y+3, r24	; 0x03
     b88:	8b 81       	ldd	r24, Y+3	; 0x03
     b8a:	0e 94 0f 04 	call	0x81e	; 0x81e <write_char>
	   break;
     b8e:	80 c1       	rjmp	.+768    	; 0xe90 <send_number_lcd+0x418>
	   
	   case 5:
	   w = (number/10000);                 w= w+48;        write_char(w);
     b90:	89 85       	ldd	r24, Y+9	; 0x09
     b92:	9a 85       	ldd	r25, Y+10	; 0x0a
     b94:	92 95       	swap	r25
     b96:	82 95       	swap	r24
     b98:	8f 70       	andi	r24, 0x0F	; 15
     b9a:	89 27       	eor	r24, r25
     b9c:	9f 70       	andi	r25, 0x0F	; 15
     b9e:	89 27       	eor	r24, r25
     ba0:	9c 01       	movw	r18, r24
     ba2:	a7 e4       	ldi	r26, 0x47	; 71
     ba4:	b3 e0       	ldi	r27, 0x03	; 3
     ba6:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     baa:	96 95       	lsr	r25
     bac:	87 95       	ror	r24
     bae:	96 95       	lsr	r25
     bb0:	87 95       	ror	r24
     bb2:	96 95       	lsr	r25
     bb4:	87 95       	ror	r24
     bb6:	8c 83       	std	Y+4, r24	; 0x04
     bb8:	8c 81       	ldd	r24, Y+4	; 0x04
     bba:	80 5d       	subi	r24, 0xD0	; 208
     bbc:	8c 83       	std	Y+4, r24	; 0x04
     bbe:	8c 81       	ldd	r24, Y+4	; 0x04
     bc0:	0e 94 0f 04 	call	0x81e	; 0x81e <write_char>
	   e = (number%10000)/1000;            e= e+48;       write_char(e);
     bc4:	49 85       	ldd	r20, Y+9	; 0x09
     bc6:	5a 85       	ldd	r21, Y+10	; 0x0a
     bc8:	ca 01       	movw	r24, r20
     bca:	92 95       	swap	r25
     bcc:	82 95       	swap	r24
     bce:	8f 70       	andi	r24, 0x0F	; 15
     bd0:	89 27       	eor	r24, r25
     bd2:	9f 70       	andi	r25, 0x0F	; 15
     bd4:	89 27       	eor	r24, r25
     bd6:	9c 01       	movw	r18, r24
     bd8:	a7 e4       	ldi	r26, 0x47	; 71
     bda:	b3 e0       	ldi	r27, 0x03	; 3
     bdc:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     be0:	96 95       	lsr	r25
     be2:	87 95       	ror	r24
     be4:	96 95       	lsr	r25
     be6:	87 95       	ror	r24
     be8:	96 95       	lsr	r25
     bea:	87 95       	ror	r24
     bec:	60 e1       	ldi	r22, 0x10	; 16
     bee:	77 e2       	ldi	r23, 0x27	; 39
     bf0:	86 9f       	mul	r24, r22
     bf2:	90 01       	movw	r18, r0
     bf4:	87 9f       	mul	r24, r23
     bf6:	30 0d       	add	r19, r0
     bf8:	96 9f       	mul	r25, r22
     bfa:	30 0d       	add	r19, r0
     bfc:	11 24       	eor	r1, r1
     bfe:	ca 01       	movw	r24, r20
     c00:	82 1b       	sub	r24, r18
     c02:	93 0b       	sbc	r25, r19
     c04:	96 95       	lsr	r25
     c06:	87 95       	ror	r24
     c08:	96 95       	lsr	r25
     c0a:	87 95       	ror	r24
     c0c:	96 95       	lsr	r25
     c0e:	87 95       	ror	r24
     c10:	9c 01       	movw	r18, r24
     c12:	a5 ec       	ldi	r26, 0xC5	; 197
     c14:	b0 e2       	ldi	r27, 0x20	; 32
     c16:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     c1a:	92 95       	swap	r25
     c1c:	82 95       	swap	r24
     c1e:	8f 70       	andi	r24, 0x0F	; 15
     c20:	89 27       	eor	r24, r25
     c22:	9f 70       	andi	r25, 0x0F	; 15
     c24:	89 27       	eor	r24, r25
     c26:	8d 83       	std	Y+5, r24	; 0x05
     c28:	8d 81       	ldd	r24, Y+5	; 0x05
     c2a:	80 5d       	subi	r24, 0xD0	; 208
     c2c:	8d 83       	std	Y+5, r24	; 0x05
     c2e:	8d 81       	ldd	r24, Y+5	; 0x05
     c30:	0e 94 0f 04 	call	0x81e	; 0x81e <write_char>
	   r=  ((number%10000)%1000)/100;      r= r+48;		   write_char(r);
     c34:	e9 85       	ldd	r30, Y+9	; 0x09
     c36:	fa 85       	ldd	r31, Y+10	; 0x0a
     c38:	cf 01       	movw	r24, r30
     c3a:	92 95       	swap	r25
     c3c:	82 95       	swap	r24
     c3e:	8f 70       	andi	r24, 0x0F	; 15
     c40:	89 27       	eor	r24, r25
     c42:	9f 70       	andi	r25, 0x0F	; 15
     c44:	89 27       	eor	r24, r25
     c46:	9c 01       	movw	r18, r24
     c48:	a7 e4       	ldi	r26, 0x47	; 71
     c4a:	b3 e0       	ldi	r27, 0x03	; 3
     c4c:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     c50:	ac 01       	movw	r20, r24
     c52:	56 95       	lsr	r21
     c54:	47 95       	ror	r20
     c56:	56 95       	lsr	r21
     c58:	47 95       	ror	r20
     c5a:	56 95       	lsr	r21
     c5c:	47 95       	ror	r20
     c5e:	20 e1       	ldi	r18, 0x10	; 16
     c60:	37 e2       	ldi	r19, 0x27	; 39
     c62:	42 9f       	mul	r20, r18
     c64:	c0 01       	movw	r24, r0
     c66:	43 9f       	mul	r20, r19
     c68:	90 0d       	add	r25, r0
     c6a:	52 9f       	mul	r21, r18
     c6c:	90 0d       	add	r25, r0
     c6e:	11 24       	eor	r1, r1
     c70:	af 01       	movw	r20, r30
     c72:	48 1b       	sub	r20, r24
     c74:	59 0b       	sbc	r21, r25
     c76:	ca 01       	movw	r24, r20
     c78:	96 95       	lsr	r25
     c7a:	87 95       	ror	r24
     c7c:	96 95       	lsr	r25
     c7e:	87 95       	ror	r24
     c80:	96 95       	lsr	r25
     c82:	87 95       	ror	r24
     c84:	9c 01       	movw	r18, r24
     c86:	a5 ec       	ldi	r26, 0xC5	; 197
     c88:	b0 e2       	ldi	r27, 0x20	; 32
     c8a:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     c8e:	92 95       	swap	r25
     c90:	82 95       	swap	r24
     c92:	8f 70       	andi	r24, 0x0F	; 15
     c94:	89 27       	eor	r24, r25
     c96:	9f 70       	andi	r25, 0x0F	; 15
     c98:	89 27       	eor	r24, r25
     c9a:	68 ee       	ldi	r22, 0xE8	; 232
     c9c:	73 e0       	ldi	r23, 0x03	; 3
     c9e:	86 9f       	mul	r24, r22
     ca0:	90 01       	movw	r18, r0
     ca2:	87 9f       	mul	r24, r23
     ca4:	30 0d       	add	r19, r0
     ca6:	96 9f       	mul	r25, r22
     ca8:	30 0d       	add	r19, r0
     caa:	11 24       	eor	r1, r1
     cac:	ca 01       	movw	r24, r20
     cae:	82 1b       	sub	r24, r18
     cb0:	93 0b       	sbc	r25, r19
     cb2:	96 95       	lsr	r25
     cb4:	87 95       	ror	r24
     cb6:	96 95       	lsr	r25
     cb8:	87 95       	ror	r24
     cba:	9c 01       	movw	r18, r24
     cbc:	ab e7       	ldi	r26, 0x7B	; 123
     cbe:	b4 e1       	ldi	r27, 0x14	; 20
     cc0:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     cc4:	96 95       	lsr	r25
     cc6:	87 95       	ror	r24
     cc8:	8e 83       	std	Y+6, r24	; 0x06
     cca:	8e 81       	ldd	r24, Y+6	; 0x06
     ccc:	80 5d       	subi	r24, 0xD0	; 208
     cce:	8e 83       	std	Y+6, r24	; 0x06
     cd0:	8e 81       	ldd	r24, Y+6	; 0x06
     cd2:	0e 94 0f 04 	call	0x81e	; 0x81e <write_char>
	   t = ((number%10000)%1000)%100/10;   t= t+48;		   write_char(t);
     cd6:	49 85       	ldd	r20, Y+9	; 0x09
     cd8:	5a 85       	ldd	r21, Y+10	; 0x0a
     cda:	ca 01       	movw	r24, r20
     cdc:	92 95       	swap	r25
     cde:	82 95       	swap	r24
     ce0:	8f 70       	andi	r24, 0x0F	; 15
     ce2:	89 27       	eor	r24, r25
     ce4:	9f 70       	andi	r25, 0x0F	; 15
     ce6:	89 27       	eor	r24, r25
     ce8:	9c 01       	movw	r18, r24
     cea:	a7 e4       	ldi	r26, 0x47	; 71
     cec:	b3 e0       	ldi	r27, 0x03	; 3
     cee:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     cf2:	fc 01       	movw	r30, r24
     cf4:	f6 95       	lsr	r31
     cf6:	e7 95       	ror	r30
     cf8:	f6 95       	lsr	r31
     cfa:	e7 95       	ror	r30
     cfc:	f6 95       	lsr	r31
     cfe:	e7 95       	ror	r30
     d00:	20 e1       	ldi	r18, 0x10	; 16
     d02:	37 e2       	ldi	r19, 0x27	; 39
     d04:	e2 9f       	mul	r30, r18
     d06:	c0 01       	movw	r24, r0
     d08:	e3 9f       	mul	r30, r19
     d0a:	90 0d       	add	r25, r0
     d0c:	f2 9f       	mul	r31, r18
     d0e:	90 0d       	add	r25, r0
     d10:	11 24       	eor	r1, r1
     d12:	fa 01       	movw	r30, r20
     d14:	e8 1b       	sub	r30, r24
     d16:	f9 0b       	sbc	r31, r25
     d18:	cf 01       	movw	r24, r30
     d1a:	96 95       	lsr	r25
     d1c:	87 95       	ror	r24
     d1e:	96 95       	lsr	r25
     d20:	87 95       	ror	r24
     d22:	96 95       	lsr	r25
     d24:	87 95       	ror	r24
     d26:	9c 01       	movw	r18, r24
     d28:	a5 ec       	ldi	r26, 0xC5	; 197
     d2a:	b0 e2       	ldi	r27, 0x20	; 32
     d2c:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     d30:	ac 01       	movw	r20, r24
     d32:	52 95       	swap	r21
     d34:	42 95       	swap	r20
     d36:	4f 70       	andi	r20, 0x0F	; 15
     d38:	45 27       	eor	r20, r21
     d3a:	5f 70       	andi	r21, 0x0F	; 15
     d3c:	45 27       	eor	r20, r21
     d3e:	28 ee       	ldi	r18, 0xE8	; 232
     d40:	33 e0       	ldi	r19, 0x03	; 3
     d42:	42 9f       	mul	r20, r18
     d44:	c0 01       	movw	r24, r0
     d46:	43 9f       	mul	r20, r19
     d48:	90 0d       	add	r25, r0
     d4a:	52 9f       	mul	r21, r18
     d4c:	90 0d       	add	r25, r0
     d4e:	11 24       	eor	r1, r1
     d50:	af 01       	movw	r20, r30
     d52:	48 1b       	sub	r20, r24
     d54:	59 0b       	sbc	r21, r25
     d56:	ca 01       	movw	r24, r20
     d58:	96 95       	lsr	r25
     d5a:	87 95       	ror	r24
     d5c:	96 95       	lsr	r25
     d5e:	87 95       	ror	r24
     d60:	9c 01       	movw	r18, r24
     d62:	ab e7       	ldi	r26, 0x7B	; 123
     d64:	b4 e1       	ldi	r27, 0x14	; 20
     d66:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     d6a:	96 95       	lsr	r25
     d6c:	87 95       	ror	r24
     d6e:	64 e6       	ldi	r22, 0x64	; 100
     d70:	68 9f       	mul	r22, r24
     d72:	90 01       	movw	r18, r0
     d74:	69 9f       	mul	r22, r25
     d76:	30 0d       	add	r19, r0
     d78:	11 24       	eor	r1, r1
     d7a:	ca 01       	movw	r24, r20
     d7c:	82 1b       	sub	r24, r18
     d7e:	93 0b       	sbc	r25, r19
     d80:	9c 01       	movw	r18, r24
     d82:	ad ec       	ldi	r26, 0xCD	; 205
     d84:	bc ec       	ldi	r27, 0xCC	; 204
     d86:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     d8a:	96 95       	lsr	r25
     d8c:	87 95       	ror	r24
     d8e:	96 95       	lsr	r25
     d90:	87 95       	ror	r24
     d92:	96 95       	lsr	r25
     d94:	87 95       	ror	r24
     d96:	8f 83       	std	Y+7, r24	; 0x07
     d98:	8f 81       	ldd	r24, Y+7	; 0x07
     d9a:	80 5d       	subi	r24, 0xD0	; 208
     d9c:	8f 83       	std	Y+7, r24	; 0x07
     d9e:	8f 81       	ldd	r24, Y+7	; 0x07
     da0:	0e 94 0f 04 	call	0x81e	; 0x81e <write_char>
	   u = ((number%10000)%1000)%100%10;   u= u+48;		   write_char(u);
     da4:	49 85       	ldd	r20, Y+9	; 0x09
     da6:	5a 85       	ldd	r21, Y+10	; 0x0a
     da8:	ca 01       	movw	r24, r20
     daa:	92 95       	swap	r25
     dac:	82 95       	swap	r24
     dae:	8f 70       	andi	r24, 0x0F	; 15
     db0:	89 27       	eor	r24, r25
     db2:	9f 70       	andi	r25, 0x0F	; 15
     db4:	89 27       	eor	r24, r25
     db6:	9c 01       	movw	r18, r24
     db8:	a7 e4       	ldi	r26, 0x47	; 71
     dba:	b3 e0       	ldi	r27, 0x03	; 3
     dbc:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     dc0:	fc 01       	movw	r30, r24
     dc2:	f6 95       	lsr	r31
     dc4:	e7 95       	ror	r30
     dc6:	f6 95       	lsr	r31
     dc8:	e7 95       	ror	r30
     dca:	f6 95       	lsr	r31
     dcc:	e7 95       	ror	r30
     dce:	20 e1       	ldi	r18, 0x10	; 16
     dd0:	37 e2       	ldi	r19, 0x27	; 39
     dd2:	e2 9f       	mul	r30, r18
     dd4:	c0 01       	movw	r24, r0
     dd6:	e3 9f       	mul	r30, r19
     dd8:	90 0d       	add	r25, r0
     dda:	f2 9f       	mul	r31, r18
     ddc:	90 0d       	add	r25, r0
     dde:	11 24       	eor	r1, r1
     de0:	fa 01       	movw	r30, r20
     de2:	e8 1b       	sub	r30, r24
     de4:	f9 0b       	sbc	r31, r25
     de6:	cf 01       	movw	r24, r30
     de8:	96 95       	lsr	r25
     dea:	87 95       	ror	r24
     dec:	96 95       	lsr	r25
     dee:	87 95       	ror	r24
     df0:	96 95       	lsr	r25
     df2:	87 95       	ror	r24
     df4:	9c 01       	movw	r18, r24
     df6:	a5 ec       	ldi	r26, 0xC5	; 197
     df8:	b0 e2       	ldi	r27, 0x20	; 32
     dfa:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     dfe:	ac 01       	movw	r20, r24
     e00:	52 95       	swap	r21
     e02:	42 95       	swap	r20
     e04:	4f 70       	andi	r20, 0x0F	; 15
     e06:	45 27       	eor	r20, r21
     e08:	5f 70       	andi	r21, 0x0F	; 15
     e0a:	45 27       	eor	r20, r21
     e0c:	28 ee       	ldi	r18, 0xE8	; 232
     e0e:	33 e0       	ldi	r19, 0x03	; 3
     e10:	42 9f       	mul	r20, r18
     e12:	c0 01       	movw	r24, r0
     e14:	43 9f       	mul	r20, r19
     e16:	90 0d       	add	r25, r0
     e18:	52 9f       	mul	r21, r18
     e1a:	90 0d       	add	r25, r0
     e1c:	11 24       	eor	r1, r1
     e1e:	af 01       	movw	r20, r30
     e20:	48 1b       	sub	r20, r24
     e22:	59 0b       	sbc	r21, r25
     e24:	ca 01       	movw	r24, r20
     e26:	96 95       	lsr	r25
     e28:	87 95       	ror	r24
     e2a:	96 95       	lsr	r25
     e2c:	87 95       	ror	r24
     e2e:	9c 01       	movw	r18, r24
     e30:	ab e7       	ldi	r26, 0x7B	; 123
     e32:	b4 e1       	ldi	r27, 0x14	; 20
     e34:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     e38:	fc 01       	movw	r30, r24
     e3a:	f6 95       	lsr	r31
     e3c:	e7 95       	ror	r30
     e3e:	24 e6       	ldi	r18, 0x64	; 100
     e40:	2e 9f       	mul	r18, r30
     e42:	c0 01       	movw	r24, r0
     e44:	2f 9f       	mul	r18, r31
     e46:	90 0d       	add	r25, r0
     e48:	11 24       	eor	r1, r1
     e4a:	fa 01       	movw	r30, r20
     e4c:	e8 1b       	sub	r30, r24
     e4e:	f9 0b       	sbc	r31, r25
     e50:	9f 01       	movw	r18, r30
     e52:	ad ec       	ldi	r26, 0xCD	; 205
     e54:	bc ec       	ldi	r27, 0xCC	; 204
     e56:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
     e5a:	96 95       	lsr	r25
     e5c:	87 95       	ror	r24
     e5e:	96 95       	lsr	r25
     e60:	87 95       	ror	r24
     e62:	96 95       	lsr	r25
     e64:	87 95       	ror	r24
     e66:	88 0f       	add	r24, r24
     e68:	99 1f       	adc	r25, r25
     e6a:	9c 01       	movw	r18, r24
     e6c:	22 0f       	add	r18, r18
     e6e:	33 1f       	adc	r19, r19
     e70:	22 0f       	add	r18, r18
     e72:	33 1f       	adc	r19, r19
     e74:	82 0f       	add	r24, r18
     e76:	93 1f       	adc	r25, r19
     e78:	9f 01       	movw	r18, r30
     e7a:	28 1b       	sub	r18, r24
     e7c:	39 0b       	sbc	r19, r25
     e7e:	c9 01       	movw	r24, r18
     e80:	88 87       	std	Y+8, r24	; 0x08
     e82:	88 85       	ldd	r24, Y+8	; 0x08
     e84:	80 5d       	subi	r24, 0xD0	; 208
     e86:	88 87       	std	Y+8, r24	; 0x08
     e88:	88 85       	ldd	r24, Y+8	; 0x08
     e8a:	0e 94 0f 04 	call	0x81e	; 0x81e <write_char>
	   break;
     e8e:	00 00       	nop
	}
}
     e90:	00 00       	nop
     e92:	2b 96       	adiw	r28, 0x0b	; 11
     e94:	0f b6       	in	r0, 0x3f	; 63
     e96:	f8 94       	cli
     e98:	de bf       	out	0x3e, r29	; 62
     e9a:	0f be       	out	0x3f, r0	; 63
     e9c:	cd bf       	out	0x3d, r28	; 61
     e9e:	df 91       	pop	r29
     ea0:	cf 91       	pop	r28
     ea2:	08 95       	ret

00000ea4 <main>:

void ICU_SW(void);
void ICU_HW(void);

int main(void)
{
     ea4:	cf 93       	push	r28
     ea6:	df 93       	push	r29
     ea8:	cd b7       	in	r28, 0x3d	; 61
     eaa:	de b7       	in	r29, 0x3e	; 62
	
    /* Replace with your application code */
	direction_and_port_init();
     eac:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <direction_and_port_init>
	
	TIMER1_voidICUCallback(&ICU_HW);
     eb0:	80 e9       	ldi	r24, 0x90	; 144
     eb2:	97 e0       	ldi	r25, 0x07	; 7
     eb4:	0e 94 0d 09 	call	0x121a	; 0x121a <TIMER1_voidICUCallback>
	//GIE_ENABLE();
	//ADC_VoidInit();
	TIMER1_VoidInit();
     eb8:	0e 94 4d 08 	call	0x109a	; 0x109a <TIMER1_VoidInit>
	Timer1_voidSettrigger(RISING_EDGE);
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <Timer1_voidSettrigger>
	TIMER1_u8ISR_ICU_Mode(ENABLED);
     ec2:	80 e0       	ldi	r24, 0x00	; 0
     ec4:	0e 94 2a 09 	call	0x1254	; 0x1254 <TIMER1_u8ISR_ICU_Mode>
	TIMER0_VoidInit();
     ec8:	0e 94 0f 08 	call	0x101e	; 0x101e <TIMER0_VoidInit>
	init_lcd();
     ecc:	0e 94 48 01 	call	0x290	; 0x290 <init_lcd>
	GIE_ENABLE();
     ed0:	0e 94 37 01 	call	0x26e	; 0x26e <GIE_ENABLE>
	
	
	//Res_Compare_Match = TIMER0_U8SetCallBack(&led , 250 , 1000);
	//TIMER0_U8SetCallBackOV(&led_OV , 0.256);
	//Timer0_U8BWM(20000 , 0.25 , 64 ,&led_Bwm, 1000);
	Timer0_voidFast_Bwm(25);
     ed4:	89 e1       	ldi	r24, 0x19	; 25
     ed6:	0e 94 af 08 	call	0x115e	; 0x115e <Timer0_voidFast_Bwm>
	
    while (1) 
    {
		
		//while((Period_ticks == 0) && (On_ticks == 0));  /*wait until period ticks and on ticks are measured*/
		position_xy(0,0);
     eda:	60 e0       	ldi	r22, 0x00	; 0
     edc:	80 e0       	ldi	r24, 0x00	; 0
     ede:	0e 94 0e 05 	call	0xa1c	; 0xa1c <position_xy>
		write_string("periodticks=" , 0 , 0);
     ee2:	40 e0       	ldi	r20, 0x00	; 0
     ee4:	60 e0       	ldi	r22, 0x00	; 0
     ee6:	81 e6       	ldi	r24, 0x61	; 97
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	0e 94 33 04 	call	0x866	; 0x866 <write_string>
		send_number_lcd(Period_ticks , 3);
     eee:	80 91 82 00 	lds	r24, 0x0082	; 0x800082 <Period_ticks>
     ef2:	90 91 83 00 	lds	r25, 0x0083	; 0x800083 <Period_ticks+0x1>
     ef6:	63 e0       	ldi	r22, 0x03	; 3
     ef8:	0e 94 3c 05 	call	0xa78	; 0xa78 <send_number_lcd>
		position_xy(1,0);
     efc:	60 e0       	ldi	r22, 0x00	; 0
     efe:	81 e0       	ldi	r24, 0x01	; 1
     f00:	0e 94 0e 05 	call	0xa1c	; 0xa1c <position_xy>
		write_string("onticks=", 1, 0);
     f04:	40 e0       	ldi	r20, 0x00	; 0
     f06:	61 e0       	ldi	r22, 0x01	; 1
     f08:	8e e6       	ldi	r24, 0x6E	; 110
     f0a:	90 e0       	ldi	r25, 0x00	; 0
     f0c:	0e 94 33 04 	call	0x866	; 0x866 <write_string>
		
		
		send_number_lcd(On_ticks, 3);
     f10:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <On_ticks>
     f14:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <On_ticks+0x1>
     f18:	63 e0       	ldi	r22, 0x03	; 3
     f1a:	0e 94 3c 05 	call	0xa78	; 0xa78 <send_number_lcd>
		{
			TIMER1_voidFast_Bwm(20000 , counter);
			_delay_ms(10);
		}*/
		
    }
     f1e:	dd cf       	rjmp	.-70     	; 0xeda <main+0x36>

00000f20 <ICU_HW>:
}
void ICU_HW(void)
{
     f20:	cf 93       	push	r28
     f22:	df 93       	push	r29
     f24:	cd b7       	in	r28, 0x3d	; 61
     f26:	de b7       	in	r29, 0x3e	; 62
	static U16  R1 , R2 , R3;
	static U8 Local_u8counter = 0;
	Local_u8counter++;
     f28:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <Local_u8counter.1866>
     f2c:	8f 5f       	subi	r24, 0xFF	; 255
     f2e:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <Local_u8counter.1866>
	if (Local_u8counter == 1)
     f32:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <Local_u8counter.1866>
     f36:	81 30       	cpi	r24, 0x01	; 1
     f38:	39 f4       	brne	.+14     	; 0xf48 <ICU_HW+0x28>
	{
		R1 = Timer1_U16ReadTimerValue();
     f3a:	0e 94 53 09 	call	0x12a6	; 0x12a6 <Timer1_U16ReadTimerValue>
     f3e:	90 93 88 00 	sts	0x0088, r25	; 0x800088 <R1.1863+0x1>
     f42:	80 93 87 00 	sts	0x0087, r24	; 0x800087 <R1.1863>
		R3 = Timer1_U16ReadTimerValue();
		On_ticks = R3 - R2;
		TIMER1_u8ISR_ICU_Mode(DISABLED);
	}
	
}
     f46:	3b c0       	rjmp	.+118    	; 0xfbe <ICU_HW+0x9e>
	Local_u8counter++;
	if (Local_u8counter == 1)
	{
		R1 = Timer1_U16ReadTimerValue();
	}
	else if (Local_u8counter == 2)
     f48:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <Local_u8counter.1866>
     f4c:	82 30       	cpi	r24, 0x02	; 2
     f4e:	d1 f4       	brne	.+52     	; 0xf84 <ICU_HW+0x64>
	{
		R2 = Timer1_U16ReadTimerValue();
     f50:	0e 94 53 09 	call	0x12a6	; 0x12a6 <Timer1_U16ReadTimerValue>
     f54:	90 93 8a 00 	sts	0x008A, r25	; 0x80008a <R2.1864+0x1>
     f58:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <R2.1864>
		Period_ticks = R2 - R1 ;
     f5c:	20 91 89 00 	lds	r18, 0x0089	; 0x800089 <R2.1864>
     f60:	30 91 8a 00 	lds	r19, 0x008A	; 0x80008a <R2.1864+0x1>
     f64:	80 91 87 00 	lds	r24, 0x0087	; 0x800087 <R1.1863>
     f68:	90 91 88 00 	lds	r25, 0x0088	; 0x800088 <R1.1863+0x1>
     f6c:	a9 01       	movw	r20, r18
     f6e:	48 1b       	sub	r20, r24
     f70:	59 0b       	sbc	r21, r25
     f72:	ca 01       	movw	r24, r20
     f74:	90 93 83 00 	sts	0x0083, r25	; 0x800083 <Period_ticks+0x1>
     f78:	80 93 82 00 	sts	0x0082, r24	; 0x800082 <Period_ticks>
		Timer1_voidSettrigger(FALLING_EDGE);
     f7c:	80 e0       	ldi	r24, 0x00	; 0
     f7e:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <Timer1_voidSettrigger>
		R3 = Timer1_U16ReadTimerValue();
		On_ticks = R3 - R2;
		TIMER1_u8ISR_ICU_Mode(DISABLED);
	}
	
}
     f82:	1d c0       	rjmp	.+58     	; 0xfbe <ICU_HW+0x9e>
	{
		R2 = Timer1_U16ReadTimerValue();
		Period_ticks = R2 - R1 ;
		Timer1_voidSettrigger(FALLING_EDGE);
	}
	else if (Local_u8counter ==3)
     f84:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <Local_u8counter.1866>
     f88:	83 30       	cpi	r24, 0x03	; 3
     f8a:	c9 f4       	brne	.+50     	; 0xfbe <ICU_HW+0x9e>
	{
		R3 = Timer1_U16ReadTimerValue();
     f8c:	0e 94 53 09 	call	0x12a6	; 0x12a6 <Timer1_U16ReadTimerValue>
     f90:	90 93 8c 00 	sts	0x008C, r25	; 0x80008c <R3.1865+0x1>
     f94:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <R3.1865>
		On_ticks = R3 - R2;
     f98:	20 91 8b 00 	lds	r18, 0x008B	; 0x80008b <R3.1865>
     f9c:	30 91 8c 00 	lds	r19, 0x008C	; 0x80008c <R3.1865+0x1>
     fa0:	80 91 89 00 	lds	r24, 0x0089	; 0x800089 <R2.1864>
     fa4:	90 91 8a 00 	lds	r25, 0x008A	; 0x80008a <R2.1864+0x1>
     fa8:	a9 01       	movw	r20, r18
     faa:	48 1b       	sub	r20, r24
     fac:	59 0b       	sbc	r21, r25
     fae:	ca 01       	movw	r24, r20
     fb0:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <On_ticks+0x1>
     fb4:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <On_ticks>
		TIMER1_u8ISR_ICU_Mode(DISABLED);
     fb8:	81 e0       	ldi	r24, 0x01	; 1
     fba:	0e 94 2a 09 	call	0x1254	; 0x1254 <TIMER1_u8ISR_ICU_Mode>
	}
	
}
     fbe:	00 00       	nop
     fc0:	df 91       	pop	r29
     fc2:	cf 91       	pop	r28
     fc4:	08 95       	ret

00000fc6 <direction_and_port_init>:
#include "memory_map.h"
#include "port_config.h"
#include "port_initial.h"

void direction_and_port_init(void)
{
     fc6:	cf 93       	push	r28
     fc8:	df 93       	push	r29
     fca:	cd b7       	in	r28, 0x3d	; 61
     fcc:	de b7       	in	r29, 0x3e	; 62
	DDRA = DDRA_DIRECTION;
     fce:	8a e3       	ldi	r24, 0x3A	; 58
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	2f ef       	ldi	r18, 0xFF	; 255
     fd4:	fc 01       	movw	r30, r24
     fd6:	20 83       	st	Z, r18
	DDRB = DDRB_DIRECTION;
     fd8:	87 e3       	ldi	r24, 0x37	; 55
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	2f ef       	ldi	r18, 0xFF	; 255
     fde:	fc 01       	movw	r30, r24
     fe0:	20 83       	st	Z, r18
	DDRC = DDRC_DIRECTION;
     fe2:	84 e3       	ldi	r24, 0x34	; 52
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	2f ef       	ldi	r18, 0xFF	; 255
     fe8:	fc 01       	movw	r30, r24
     fea:	20 83       	st	Z, r18
	DDRD = DDRD_DIRECTION;
     fec:	81 e3       	ldi	r24, 0x31	; 49
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	2f eb       	ldi	r18, 0xBF	; 191
     ff2:	fc 01       	movw	r30, r24
     ff4:	20 83       	st	Z, r18
	
	PORTA = PORTA_VALUE;
     ff6:	8b e3       	ldi	r24, 0x3B	; 59
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	fc 01       	movw	r30, r24
     ffc:	10 82       	st	Z, r1
	PORTB = PORTB_VALUE;
     ffe:	88 e3       	ldi	r24, 0x38	; 56
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	fc 01       	movw	r30, r24
    1004:	10 82       	st	Z, r1
	PORTC = PORTC_VALUE;  
    1006:	85 e3       	ldi	r24, 0x35	; 53
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	fc 01       	movw	r30, r24
    100c:	10 82       	st	Z, r1
	PORTD = PORTD_VALUE;
    100e:	82 e3       	ldi	r24, 0x32	; 50
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	fc 01       	movw	r30, r24
    1014:	10 82       	st	Z, r1
}
    1016:	00 00       	nop
    1018:	df 91       	pop	r29
    101a:	cf 91       	pop	r28
    101c:	08 95       	ret

0000101e <TIMER0_VoidInit>:
}
void Timer1_voidSetTimerValue(U16 Copy_U16value)
{
	
	TCNT1L = Copy_U16value ; 
}
    101e:	cf 93       	push	r28
    1020:	df 93       	push	r29
    1022:	cd b7       	in	r28, 0x3d	; 61
    1024:	de b7       	in	r29, 0x3e	; 62
    1026:	83 e5       	ldi	r24, 0x53	; 83
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	23 e5       	ldi	r18, 0x53	; 83
    102c:	30 e0       	ldi	r19, 0x00	; 0
    102e:	f9 01       	movw	r30, r18
    1030:	20 81       	ld	r18, Z
    1032:	28 60       	ori	r18, 0x08	; 8
    1034:	fc 01       	movw	r30, r24
    1036:	20 83       	st	Z, r18
    1038:	83 e5       	ldi	r24, 0x53	; 83
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	23 e5       	ldi	r18, 0x53	; 83
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	f9 01       	movw	r30, r18
    1042:	20 81       	ld	r18, Z
    1044:	20 64       	ori	r18, 0x40	; 64
    1046:	fc 01       	movw	r30, r24
    1048:	20 83       	st	Z, r18
    104a:	89 e5       	ldi	r24, 0x59	; 89
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	29 e5       	ldi	r18, 0x59	; 89
    1050:	30 e0       	ldi	r19, 0x00	; 0
    1052:	f9 01       	movw	r30, r18
    1054:	20 81       	ld	r18, Z
    1056:	2e 7f       	andi	r18, 0xFE	; 254
    1058:	fc 01       	movw	r30, r24
    105a:	20 83       	st	Z, r18
    105c:	89 e5       	ldi	r24, 0x59	; 89
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	29 e5       	ldi	r18, 0x59	; 89
    1062:	30 e0       	ldi	r19, 0x00	; 0
    1064:	f9 01       	movw	r30, r18
    1066:	20 81       	ld	r18, Z
    1068:	2d 7f       	andi	r18, 0xFD	; 253
    106a:	fc 01       	movw	r30, r24
    106c:	20 83       	st	Z, r18
    106e:	83 e5       	ldi	r24, 0x53	; 83
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	23 e5       	ldi	r18, 0x53	; 83
    1074:	30 e0       	ldi	r19, 0x00	; 0
    1076:	f9 01       	movw	r30, r18
    1078:	20 81       	ld	r18, Z
    107a:	28 7f       	andi	r18, 0xF8	; 248
    107c:	fc 01       	movw	r30, r24
    107e:	20 83       	st	Z, r18
    1080:	83 e5       	ldi	r24, 0x53	; 83
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	23 e5       	ldi	r18, 0x53	; 83
    1086:	30 e0       	ldi	r19, 0x00	; 0
    1088:	f9 01       	movw	r30, r18
    108a:	20 81       	ld	r18, Z
    108c:	22 60       	ori	r18, 0x02	; 2
    108e:	fc 01       	movw	r30, r24
    1090:	20 83       	st	Z, r18
    1092:	00 00       	nop
    1094:	df 91       	pop	r29
    1096:	cf 91       	pop	r28
    1098:	08 95       	ret

0000109a <TIMER1_VoidInit>:
    109a:	cf 93       	push	r28
    109c:	df 93       	push	r29
    109e:	cd b7       	in	r28, 0x3d	; 61
    10a0:	de b7       	in	r29, 0x3e	; 62
    10a2:	8f e4       	ldi	r24, 0x4F	; 79
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	2f e4       	ldi	r18, 0x4F	; 79
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	f9 01       	movw	r30, r18
    10ac:	20 81       	ld	r18, Z
    10ae:	2e 7f       	andi	r18, 0xFE	; 254
    10b0:	fc 01       	movw	r30, r24
    10b2:	20 83       	st	Z, r18
    10b4:	8f e4       	ldi	r24, 0x4F	; 79
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	2f e4       	ldi	r18, 0x4F	; 79
    10ba:	30 e0       	ldi	r19, 0x00	; 0
    10bc:	f9 01       	movw	r30, r18
    10be:	20 81       	ld	r18, Z
    10c0:	2d 7f       	andi	r18, 0xFD	; 253
    10c2:	fc 01       	movw	r30, r24
    10c4:	20 83       	st	Z, r18
    10c6:	8e e4       	ldi	r24, 0x4E	; 78
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	2e e4       	ldi	r18, 0x4E	; 78
    10cc:	30 e0       	ldi	r19, 0x00	; 0
    10ce:	f9 01       	movw	r30, r18
    10d0:	20 81       	ld	r18, Z
    10d2:	27 7f       	andi	r18, 0xF7	; 247
    10d4:	fc 01       	movw	r30, r24
    10d6:	20 83       	st	Z, r18
    10d8:	8e e4       	ldi	r24, 0x4E	; 78
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	2e e4       	ldi	r18, 0x4E	; 78
    10de:	30 e0       	ldi	r19, 0x00	; 0
    10e0:	f9 01       	movw	r30, r18
    10e2:	20 81       	ld	r18, Z
    10e4:	2f 7e       	andi	r18, 0xEF	; 239
    10e6:	fc 01       	movw	r30, r24
    10e8:	20 83       	st	Z, r18
    10ea:	89 e5       	ldi	r24, 0x59	; 89
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	29 e5       	ldi	r18, 0x59	; 89
    10f0:	30 e0       	ldi	r19, 0x00	; 0
    10f2:	f9 01       	movw	r30, r18
    10f4:	20 81       	ld	r18, Z
    10f6:	2f 7d       	andi	r18, 0xDF	; 223
    10f8:	fc 01       	movw	r30, r24
    10fa:	20 83       	st	Z, r18
    10fc:	89 e5       	ldi	r24, 0x59	; 89
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	29 e5       	ldi	r18, 0x59	; 89
    1102:	30 e0       	ldi	r19, 0x00	; 0
    1104:	f9 01       	movw	r30, r18
    1106:	20 81       	ld	r18, Z
    1108:	2f 7e       	andi	r18, 0xEF	; 239
    110a:	fc 01       	movw	r30, r24
    110c:	20 83       	st	Z, r18
    110e:	89 e5       	ldi	r24, 0x59	; 89
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	29 e5       	ldi	r18, 0x59	; 89
    1114:	30 e0       	ldi	r19, 0x00	; 0
    1116:	f9 01       	movw	r30, r18
    1118:	20 81       	ld	r18, Z
    111a:	27 7f       	andi	r18, 0xF7	; 247
    111c:	fc 01       	movw	r30, r24
    111e:	20 83       	st	Z, r18
    1120:	89 e5       	ldi	r24, 0x59	; 89
    1122:	90 e0       	ldi	r25, 0x00	; 0
    1124:	29 e5       	ldi	r18, 0x59	; 89
    1126:	30 e0       	ldi	r19, 0x00	; 0
    1128:	f9 01       	movw	r30, r18
    112a:	20 81       	ld	r18, Z
    112c:	2b 7f       	andi	r18, 0xFB	; 251
    112e:	fc 01       	movw	r30, r24
    1130:	20 83       	st	Z, r18
    1132:	8e e4       	ldi	r24, 0x4E	; 78
    1134:	90 e0       	ldi	r25, 0x00	; 0
    1136:	2e e4       	ldi	r18, 0x4E	; 78
    1138:	30 e0       	ldi	r19, 0x00	; 0
    113a:	f9 01       	movw	r30, r18
    113c:	20 81       	ld	r18, Z
    113e:	28 7f       	andi	r18, 0xF8	; 248
    1140:	fc 01       	movw	r30, r24
    1142:	20 83       	st	Z, r18
    1144:	8e e4       	ldi	r24, 0x4E	; 78
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	2e e4       	ldi	r18, 0x4E	; 78
    114a:	30 e0       	ldi	r19, 0x00	; 0
    114c:	f9 01       	movw	r30, r18
    114e:	20 81       	ld	r18, Z
    1150:	22 60       	ori	r18, 0x02	; 2
    1152:	fc 01       	movw	r30, r24
    1154:	20 83       	st	Z, r18
    1156:	00 00       	nop
    1158:	df 91       	pop	r29
    115a:	cf 91       	pop	r28
    115c:	08 95       	ret

0000115e <Timer0_voidFast_Bwm>:
    115e:	cf 93       	push	r28
    1160:	df 93       	push	r29
    1162:	00 d0       	rcall	.+0      	; 0x1164 <Timer0_voidFast_Bwm+0x6>
    1164:	cd b7       	in	r28, 0x3d	; 61
    1166:	de b7       	in	r29, 0x3e	; 62
    1168:	8a 83       	std	Y+2, r24	; 0x02
    116a:	83 e5       	ldi	r24, 0x53	; 83
    116c:	90 e0       	ldi	r25, 0x00	; 0
    116e:	23 e5       	ldi	r18, 0x53	; 83
    1170:	30 e0       	ldi	r19, 0x00	; 0
    1172:	f9 01       	movw	r30, r18
    1174:	20 81       	ld	r18, Z
    1176:	2f 7e       	andi	r18, 0xEF	; 239
    1178:	fc 01       	movw	r30, r24
    117a:	20 83       	st	Z, r18
    117c:	83 e5       	ldi	r24, 0x53	; 83
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	23 e5       	ldi	r18, 0x53	; 83
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	f9 01       	movw	r30, r18
    1186:	20 81       	ld	r18, Z
    1188:	20 62       	ori	r18, 0x20	; 32
    118a:	fc 01       	movw	r30, r24
    118c:	20 83       	st	Z, r18
    118e:	8a 81       	ldd	r24, Y+2	; 0x02
    1190:	88 2f       	mov	r24, r24
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	98 2f       	mov	r25, r24
    1196:	88 27       	eor	r24, r24
    1198:	96 95       	lsr	r25
    119a:	87 95       	ror	r24
    119c:	96 95       	lsr	r25
    119e:	87 95       	ror	r24
    11a0:	9c 01       	movw	r18, r24
    11a2:	ab e7       	ldi	r26, 0x7B	; 123
    11a4:	b4 e1       	ldi	r27, 0x14	; 20
    11a6:	0e 94 1f 0b 	call	0x163e	; 0x163e <__umulhisi3>
    11aa:	96 95       	lsr	r25
    11ac:	87 95       	ror	r24
    11ae:	89 83       	std	Y+1, r24	; 0x01
    11b0:	8c e5       	ldi	r24, 0x5C	; 92
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	29 81       	ldd	r18, Y+1	; 0x01
    11b6:	fc 01       	movw	r30, r24
    11b8:	20 83       	st	Z, r18
    11ba:	00 00       	nop
    11bc:	0f 90       	pop	r0
    11be:	0f 90       	pop	r0
    11c0:	df 91       	pop	r29
    11c2:	cf 91       	pop	r28
    11c4:	08 95       	ret

000011c6 <Timer1_voidSettrigger>:
    11c6:	cf 93       	push	r28
    11c8:	df 93       	push	r29
    11ca:	00 d0       	rcall	.+0      	; 0x11cc <Timer1_voidSettrigger+0x6>
    11cc:	cd b7       	in	r28, 0x3d	; 61
    11ce:	de b7       	in	r29, 0x3e	; 62
    11d0:	8a 83       	std	Y+2, r24	; 0x02
    11d2:	19 82       	std	Y+1, r1	; 0x01
    11d4:	8a 81       	ldd	r24, Y+2	; 0x02
    11d6:	88 2f       	mov	r24, r24
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	00 97       	sbiw	r24, 0x00	; 0
    11dc:	61 f0       	breq	.+24     	; 0x11f6 <Timer1_voidSettrigger+0x30>
    11de:	01 97       	sbiw	r24, 0x01	; 1
    11e0:	a1 f4       	brne	.+40     	; 0x120a <Timer1_voidSettrigger+0x44>
    11e2:	8e e4       	ldi	r24, 0x4E	; 78
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	2e e4       	ldi	r18, 0x4E	; 78
    11e8:	30 e0       	ldi	r19, 0x00	; 0
    11ea:	f9 01       	movw	r30, r18
    11ec:	20 81       	ld	r18, Z
    11ee:	20 64       	ori	r18, 0x40	; 64
    11f0:	fc 01       	movw	r30, r24
    11f2:	20 83       	st	Z, r18
    11f4:	0c c0       	rjmp	.+24     	; 0x120e <Timer1_voidSettrigger+0x48>
    11f6:	8e e4       	ldi	r24, 0x4E	; 78
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	2e e4       	ldi	r18, 0x4E	; 78
    11fc:	30 e0       	ldi	r19, 0x00	; 0
    11fe:	f9 01       	movw	r30, r18
    1200:	20 81       	ld	r18, Z
    1202:	2f 7b       	andi	r18, 0xBF	; 191
    1204:	fc 01       	movw	r30, r24
    1206:	20 83       	st	Z, r18
    1208:	02 c0       	rjmp	.+4      	; 0x120e <Timer1_voidSettrigger+0x48>
    120a:	81 e0       	ldi	r24, 0x01	; 1
    120c:	89 83       	std	Y+1, r24	; 0x01
    120e:	89 81       	ldd	r24, Y+1	; 0x01
    1210:	0f 90       	pop	r0
    1212:	0f 90       	pop	r0
    1214:	df 91       	pop	r29
    1216:	cf 91       	pop	r28
    1218:	08 95       	ret

0000121a <TIMER1_voidICUCallback>:
    121a:	cf 93       	push	r28
    121c:	df 93       	push	r29
    121e:	00 d0       	rcall	.+0      	; 0x1220 <TIMER1_voidICUCallback+0x6>
    1220:	1f 92       	push	r1
    1222:	cd b7       	in	r28, 0x3d	; 61
    1224:	de b7       	in	r29, 0x3e	; 62
    1226:	9b 83       	std	Y+3, r25	; 0x03
    1228:	8a 83       	std	Y+2, r24	; 0x02
    122a:	19 82       	std	Y+1, r1	; 0x01
    122c:	8a 81       	ldd	r24, Y+2	; 0x02
    122e:	9b 81       	ldd	r25, Y+3	; 0x03
    1230:	89 2b       	or	r24, r25
    1232:	39 f0       	breq	.+14     	; 0x1242 <TIMER1_voidICUCallback+0x28>
    1234:	8a 81       	ldd	r24, Y+2	; 0x02
    1236:	9b 81       	ldd	r25, Y+3	; 0x03
    1238:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <TIMER1_GLIBALPVICUcallback+0x1>
    123c:	80 93 8f 00 	sts	0x008F, r24	; 0x80008f <TIMER1_GLIBALPVICUcallback>
    1240:	02 c0       	rjmp	.+4      	; 0x1246 <TIMER1_voidICUCallback+0x2c>
    1242:	81 e0       	ldi	r24, 0x01	; 1
    1244:	89 83       	std	Y+1, r24	; 0x01
    1246:	89 81       	ldd	r24, Y+1	; 0x01
    1248:	0f 90       	pop	r0
    124a:	0f 90       	pop	r0
    124c:	0f 90       	pop	r0
    124e:	df 91       	pop	r29
    1250:	cf 91       	pop	r28
    1252:	08 95       	ret

00001254 <TIMER1_u8ISR_ICU_Mode>:
    1254:	cf 93       	push	r28
    1256:	df 93       	push	r29
    1258:	00 d0       	rcall	.+0      	; 0x125a <TIMER1_u8ISR_ICU_Mode+0x6>
    125a:	cd b7       	in	r28, 0x3d	; 61
    125c:	de b7       	in	r29, 0x3e	; 62
    125e:	8a 83       	std	Y+2, r24	; 0x02
    1260:	19 82       	std	Y+1, r1	; 0x01
    1262:	8a 81       	ldd	r24, Y+2	; 0x02
    1264:	88 2f       	mov	r24, r24
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	00 97       	sbiw	r24, 0x00	; 0
    126a:	19 f0       	breq	.+6      	; 0x1272 <TIMER1_u8ISR_ICU_Mode+0x1e>
    126c:	01 97       	sbiw	r24, 0x01	; 1
    126e:	59 f0       	breq	.+22     	; 0x1286 <TIMER1_u8ISR_ICU_Mode+0x32>
    1270:	14 c0       	rjmp	.+40     	; 0x129a <TIMER1_u8ISR_ICU_Mode+0x46>
    1272:	89 e5       	ldi	r24, 0x59	; 89
    1274:	90 e0       	ldi	r25, 0x00	; 0
    1276:	29 e5       	ldi	r18, 0x59	; 89
    1278:	30 e0       	ldi	r19, 0x00	; 0
    127a:	f9 01       	movw	r30, r18
    127c:	20 81       	ld	r18, Z
    127e:	20 62       	ori	r18, 0x20	; 32
    1280:	fc 01       	movw	r30, r24
    1282:	20 83       	st	Z, r18
    1284:	0a c0       	rjmp	.+20     	; 0x129a <TIMER1_u8ISR_ICU_Mode+0x46>
    1286:	89 e5       	ldi	r24, 0x59	; 89
    1288:	90 e0       	ldi	r25, 0x00	; 0
    128a:	29 e5       	ldi	r18, 0x59	; 89
    128c:	30 e0       	ldi	r19, 0x00	; 0
    128e:	f9 01       	movw	r30, r18
    1290:	20 81       	ld	r18, Z
    1292:	2f 7d       	andi	r18, 0xDF	; 223
    1294:	fc 01       	movw	r30, r24
    1296:	20 83       	st	Z, r18
    1298:	00 00       	nop
    129a:	00 00       	nop
    129c:	0f 90       	pop	r0
    129e:	0f 90       	pop	r0
    12a0:	df 91       	pop	r29
    12a2:	cf 91       	pop	r28
    12a4:	08 95       	ret

000012a6 <Timer1_U16ReadTimerValue>:
U16 Timer1_U16ReadTimerValue(void)
{
    12a6:	cf 93       	push	r28
    12a8:	df 93       	push	r29
    12aa:	cd b7       	in	r28, 0x3d	; 61
    12ac:	de b7       	in	r29, 0x3e	; 62
	return TCNT1L ;
    12ae:	8c e4       	ldi	r24, 0x4C	; 76
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	fc 01       	movw	r30, r24
    12b4:	80 81       	ld	r24, Z
    12b6:	91 81       	ldd	r25, Z+1	; 0x01
}
    12b8:	df 91       	pop	r29
    12ba:	cf 91       	pop	r28
    12bc:	08 95       	ret

000012be <__vector_10>:


void __vector_10 (void) __attribute__((signal));
void __vector_10 (void)
{
    12be:	1f 92       	push	r1
    12c0:	0f 92       	push	r0
    12c2:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    12c6:	0f 92       	push	r0
    12c8:	11 24       	eor	r1, r1
    12ca:	2f 93       	push	r18
    12cc:	3f 93       	push	r19
    12ce:	4f 93       	push	r20
    12d0:	5f 93       	push	r21
    12d2:	6f 93       	push	r22
    12d4:	7f 93       	push	r23
    12d6:	8f 93       	push	r24
    12d8:	9f 93       	push	r25
    12da:	af 93       	push	r26
    12dc:	bf 93       	push	r27
    12de:	ef 93       	push	r30
    12e0:	ff 93       	push	r31
    12e2:	cf 93       	push	r28
    12e4:	df 93       	push	r29
    12e6:	cd b7       	in	r28, 0x3d	; 61
    12e8:	de b7       	in	r29, 0x3e	; 62
	if (Timer0_PvCallBackFunc != NULL)
    12ea:	80 91 8d 00 	lds	r24, 0x008D	; 0x80008d <Timer0_PvCallBackFunc>
    12ee:	90 91 8e 00 	lds	r25, 0x008E	; 0x80008e <Timer0_PvCallBackFunc+0x1>
    12f2:	89 2b       	or	r24, r25
    12f4:	31 f0       	breq	.+12     	; 0x1302 <__vector_10+0x44>
	{
		Timer0_PvCallBackFunc();
    12f6:	80 91 8d 00 	lds	r24, 0x008D	; 0x80008d <Timer0_PvCallBackFunc>
    12fa:	90 91 8e 00 	lds	r25, 0x008E	; 0x80008e <Timer0_PvCallBackFunc+0x1>
    12fe:	fc 01       	movw	r30, r24
    1300:	09 95       	icall
	}
}
    1302:	00 00       	nop
    1304:	df 91       	pop	r29
    1306:	cf 91       	pop	r28
    1308:	ff 91       	pop	r31
    130a:	ef 91       	pop	r30
    130c:	bf 91       	pop	r27
    130e:	af 91       	pop	r26
    1310:	9f 91       	pop	r25
    1312:	8f 91       	pop	r24
    1314:	7f 91       	pop	r23
    1316:	6f 91       	pop	r22
    1318:	5f 91       	pop	r21
    131a:	4f 91       	pop	r20
    131c:	3f 91       	pop	r19
    131e:	2f 91       	pop	r18
    1320:	0f 90       	pop	r0
    1322:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1326:	0f 90       	pop	r0
    1328:	1f 90       	pop	r1
    132a:	18 95       	reti

0000132c <__vector_11>:



void __vector_11 (void) __attribute__((signal));
void __vector_11 (void)
{
    132c:	1f 92       	push	r1
    132e:	0f 92       	push	r0
    1330:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1334:	0f 92       	push	r0
    1336:	11 24       	eor	r1, r1
    1338:	2f 93       	push	r18
    133a:	3f 93       	push	r19
    133c:	4f 93       	push	r20
    133e:	5f 93       	push	r21
    1340:	6f 93       	push	r22
    1342:	7f 93       	push	r23
    1344:	8f 93       	push	r24
    1346:	9f 93       	push	r25
    1348:	af 93       	push	r26
    134a:	bf 93       	push	r27
    134c:	ef 93       	push	r30
    134e:	ff 93       	push	r31
    1350:	cf 93       	push	r28
    1352:	df 93       	push	r29
    1354:	cd b7       	in	r28, 0x3d	; 61
    1356:	de b7       	in	r29, 0x3e	; 62
	if (Timer0_PvCallBackFunc != NULL)
    1358:	80 91 8d 00 	lds	r24, 0x008D	; 0x80008d <Timer0_PvCallBackFunc>
    135c:	90 91 8e 00 	lds	r25, 0x008E	; 0x80008e <Timer0_PvCallBackFunc+0x1>
    1360:	89 2b       	or	r24, r25
    1362:	31 f0       	breq	.+12     	; 0x1370 <__vector_11+0x44>
	{
		Timer0_PvCallBackFunc();
    1364:	80 91 8d 00 	lds	r24, 0x008D	; 0x80008d <Timer0_PvCallBackFunc>
    1368:	90 91 8e 00 	lds	r25, 0x008E	; 0x80008e <Timer0_PvCallBackFunc+0x1>
    136c:	fc 01       	movw	r30, r24
    136e:	09 95       	icall
	}
}
    1370:	00 00       	nop
    1372:	df 91       	pop	r29
    1374:	cf 91       	pop	r28
    1376:	ff 91       	pop	r31
    1378:	ef 91       	pop	r30
    137a:	bf 91       	pop	r27
    137c:	af 91       	pop	r26
    137e:	9f 91       	pop	r25
    1380:	8f 91       	pop	r24
    1382:	7f 91       	pop	r23
    1384:	6f 91       	pop	r22
    1386:	5f 91       	pop	r21
    1388:	4f 91       	pop	r20
    138a:	3f 91       	pop	r19
    138c:	2f 91       	pop	r18
    138e:	0f 90       	pop	r0
    1390:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1394:	0f 90       	pop	r0
    1396:	1f 90       	pop	r1
    1398:	18 95       	reti

0000139a <__vector_6>:
void __vector_6 (void) __attribute__((signal));
void __vector_6 (void)
{
    139a:	1f 92       	push	r1
    139c:	0f 92       	push	r0
    139e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    13a2:	0f 92       	push	r0
    13a4:	11 24       	eor	r1, r1
    13a6:	2f 93       	push	r18
    13a8:	3f 93       	push	r19
    13aa:	4f 93       	push	r20
    13ac:	5f 93       	push	r21
    13ae:	6f 93       	push	r22
    13b0:	7f 93       	push	r23
    13b2:	8f 93       	push	r24
    13b4:	9f 93       	push	r25
    13b6:	af 93       	push	r26
    13b8:	bf 93       	push	r27
    13ba:	ef 93       	push	r30
    13bc:	ff 93       	push	r31
    13be:	cf 93       	push	r28
    13c0:	df 93       	push	r29
    13c2:	cd b7       	in	r28, 0x3d	; 61
    13c4:	de b7       	in	r29, 0x3e	; 62
	if (TIMER1_GLIBALPVICUcallback != NULL)
    13c6:	80 91 8f 00 	lds	r24, 0x008F	; 0x80008f <TIMER1_GLIBALPVICUcallback>
    13ca:	90 91 90 00 	lds	r25, 0x0090	; 0x800090 <TIMER1_GLIBALPVICUcallback+0x1>
    13ce:	89 2b       	or	r24, r25
    13d0:	31 f0       	breq	.+12     	; 0x13de <__vector_6+0x44>
	{
		TIMER1_GLIBALPVICUcallback();
    13d2:	80 91 8f 00 	lds	r24, 0x008F	; 0x80008f <TIMER1_GLIBALPVICUcallback>
    13d6:	90 91 90 00 	lds	r25, 0x0090	; 0x800090 <TIMER1_GLIBALPVICUcallback+0x1>
    13da:	fc 01       	movw	r30, r24
    13dc:	09 95       	icall
	}
	
}
    13de:	00 00       	nop
    13e0:	df 91       	pop	r29
    13e2:	cf 91       	pop	r28
    13e4:	ff 91       	pop	r31
    13e6:	ef 91       	pop	r30
    13e8:	bf 91       	pop	r27
    13ea:	af 91       	pop	r26
    13ec:	9f 91       	pop	r25
    13ee:	8f 91       	pop	r24
    13f0:	7f 91       	pop	r23
    13f2:	6f 91       	pop	r22
    13f4:	5f 91       	pop	r21
    13f6:	4f 91       	pop	r20
    13f8:	3f 91       	pop	r19
    13fa:	2f 91       	pop	r18
    13fc:	0f 90       	pop	r0
    13fe:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1402:	0f 90       	pop	r0
    1404:	1f 90       	pop	r1
    1406:	18 95       	reti

00001408 <__cmpsf2>:
    1408:	0e 94 38 0a 	call	0x1470	; 0x1470 <__fp_cmp>
    140c:	08 f4       	brcc	.+2      	; 0x1410 <__cmpsf2+0x8>
    140e:	81 e0       	ldi	r24, 0x01	; 1
    1410:	08 95       	ret

00001412 <__fixunssfsi>:
    1412:	0e 94 8c 0a 	call	0x1518	; 0x1518 <__fp_splitA>
    1416:	88 f0       	brcs	.+34     	; 0x143a <__fixunssfsi+0x28>
    1418:	9f 57       	subi	r25, 0x7F	; 127
    141a:	98 f0       	brcs	.+38     	; 0x1442 <__fixunssfsi+0x30>
    141c:	b9 2f       	mov	r27, r25
    141e:	99 27       	eor	r25, r25
    1420:	b7 51       	subi	r27, 0x17	; 23
    1422:	b0 f0       	brcs	.+44     	; 0x1450 <__fixunssfsi+0x3e>
    1424:	e1 f0       	breq	.+56     	; 0x145e <__fixunssfsi+0x4c>
    1426:	66 0f       	add	r22, r22
    1428:	77 1f       	adc	r23, r23
    142a:	88 1f       	adc	r24, r24
    142c:	99 1f       	adc	r25, r25
    142e:	1a f0       	brmi	.+6      	; 0x1436 <__fixunssfsi+0x24>
    1430:	ba 95       	dec	r27
    1432:	c9 f7       	brne	.-14     	; 0x1426 <__fixunssfsi+0x14>
    1434:	14 c0       	rjmp	.+40     	; 0x145e <__fixunssfsi+0x4c>
    1436:	b1 30       	cpi	r27, 0x01	; 1
    1438:	91 f0       	breq	.+36     	; 0x145e <__fixunssfsi+0x4c>
    143a:	0e 94 a6 0a 	call	0x154c	; 0x154c <__fp_zero>
    143e:	b1 e0       	ldi	r27, 0x01	; 1
    1440:	08 95       	ret
    1442:	0c 94 a6 0a 	jmp	0x154c	; 0x154c <__fp_zero>
    1446:	67 2f       	mov	r22, r23
    1448:	78 2f       	mov	r23, r24
    144a:	88 27       	eor	r24, r24
    144c:	b8 5f       	subi	r27, 0xF8	; 248
    144e:	39 f0       	breq	.+14     	; 0x145e <__fixunssfsi+0x4c>
    1450:	b9 3f       	cpi	r27, 0xF9	; 249
    1452:	cc f3       	brlt	.-14     	; 0x1446 <__fixunssfsi+0x34>
    1454:	86 95       	lsr	r24
    1456:	77 95       	ror	r23
    1458:	67 95       	ror	r22
    145a:	b3 95       	inc	r27
    145c:	d9 f7       	brne	.-10     	; 0x1454 <__fixunssfsi+0x42>
    145e:	3e f4       	brtc	.+14     	; 0x146e <__fixunssfsi+0x5c>
    1460:	90 95       	com	r25
    1462:	80 95       	com	r24
    1464:	70 95       	com	r23
    1466:	61 95       	neg	r22
    1468:	7f 4f       	sbci	r23, 0xFF	; 255
    146a:	8f 4f       	sbci	r24, 0xFF	; 255
    146c:	9f 4f       	sbci	r25, 0xFF	; 255
    146e:	08 95       	ret

00001470 <__fp_cmp>:
    1470:	99 0f       	add	r25, r25
    1472:	00 08       	sbc	r0, r0
    1474:	55 0f       	add	r21, r21
    1476:	aa 0b       	sbc	r26, r26
    1478:	e0 e8       	ldi	r30, 0x80	; 128
    147a:	fe ef       	ldi	r31, 0xFE	; 254
    147c:	16 16       	cp	r1, r22
    147e:	17 06       	cpc	r1, r23
    1480:	e8 07       	cpc	r30, r24
    1482:	f9 07       	cpc	r31, r25
    1484:	c0 f0       	brcs	.+48     	; 0x14b6 <__fp_cmp+0x46>
    1486:	12 16       	cp	r1, r18
    1488:	13 06       	cpc	r1, r19
    148a:	e4 07       	cpc	r30, r20
    148c:	f5 07       	cpc	r31, r21
    148e:	98 f0       	brcs	.+38     	; 0x14b6 <__fp_cmp+0x46>
    1490:	62 1b       	sub	r22, r18
    1492:	73 0b       	sbc	r23, r19
    1494:	84 0b       	sbc	r24, r20
    1496:	95 0b       	sbc	r25, r21
    1498:	39 f4       	brne	.+14     	; 0x14a8 <__fp_cmp+0x38>
    149a:	0a 26       	eor	r0, r26
    149c:	61 f0       	breq	.+24     	; 0x14b6 <__fp_cmp+0x46>
    149e:	23 2b       	or	r18, r19
    14a0:	24 2b       	or	r18, r20
    14a2:	25 2b       	or	r18, r21
    14a4:	21 f4       	brne	.+8      	; 0x14ae <__fp_cmp+0x3e>
    14a6:	08 95       	ret
    14a8:	0a 26       	eor	r0, r26
    14aa:	09 f4       	brne	.+2      	; 0x14ae <__fp_cmp+0x3e>
    14ac:	a1 40       	sbci	r26, 0x01	; 1
    14ae:	a6 95       	lsr	r26
    14b0:	8f ef       	ldi	r24, 0xFF	; 255
    14b2:	81 1d       	adc	r24, r1
    14b4:	81 1d       	adc	r24, r1
    14b6:	08 95       	ret

000014b8 <__fp_inf>:
    14b8:	97 f9       	bld	r25, 7
    14ba:	9f 67       	ori	r25, 0x7F	; 127
    14bc:	80 e8       	ldi	r24, 0x80	; 128
    14be:	70 e0       	ldi	r23, 0x00	; 0
    14c0:	60 e0       	ldi	r22, 0x00	; 0
    14c2:	08 95       	ret

000014c4 <__fp_nan>:
    14c4:	9f ef       	ldi	r25, 0xFF	; 255
    14c6:	80 ec       	ldi	r24, 0xC0	; 192
    14c8:	08 95       	ret

000014ca <__fp_pscA>:
    14ca:	00 24       	eor	r0, r0
    14cc:	0a 94       	dec	r0
    14ce:	16 16       	cp	r1, r22
    14d0:	17 06       	cpc	r1, r23
    14d2:	18 06       	cpc	r1, r24
    14d4:	09 06       	cpc	r0, r25
    14d6:	08 95       	ret

000014d8 <__fp_pscB>:
    14d8:	00 24       	eor	r0, r0
    14da:	0a 94       	dec	r0
    14dc:	12 16       	cp	r1, r18
    14de:	13 06       	cpc	r1, r19
    14e0:	14 06       	cpc	r1, r20
    14e2:	05 06       	cpc	r0, r21
    14e4:	08 95       	ret

000014e6 <__fp_round>:
    14e6:	09 2e       	mov	r0, r25
    14e8:	03 94       	inc	r0
    14ea:	00 0c       	add	r0, r0
    14ec:	11 f4       	brne	.+4      	; 0x14f2 <__fp_round+0xc>
    14ee:	88 23       	and	r24, r24
    14f0:	52 f0       	brmi	.+20     	; 0x1506 <__fp_round+0x20>
    14f2:	bb 0f       	add	r27, r27
    14f4:	40 f4       	brcc	.+16     	; 0x1506 <__fp_round+0x20>
    14f6:	bf 2b       	or	r27, r31
    14f8:	11 f4       	brne	.+4      	; 0x14fe <__fp_round+0x18>
    14fa:	60 ff       	sbrs	r22, 0
    14fc:	04 c0       	rjmp	.+8      	; 0x1506 <__fp_round+0x20>
    14fe:	6f 5f       	subi	r22, 0xFF	; 255
    1500:	7f 4f       	sbci	r23, 0xFF	; 255
    1502:	8f 4f       	sbci	r24, 0xFF	; 255
    1504:	9f 4f       	sbci	r25, 0xFF	; 255
    1506:	08 95       	ret

00001508 <__fp_split3>:
    1508:	57 fd       	sbrc	r21, 7
    150a:	90 58       	subi	r25, 0x80	; 128
    150c:	44 0f       	add	r20, r20
    150e:	55 1f       	adc	r21, r21
    1510:	59 f0       	breq	.+22     	; 0x1528 <__fp_splitA+0x10>
    1512:	5f 3f       	cpi	r21, 0xFF	; 255
    1514:	71 f0       	breq	.+28     	; 0x1532 <__fp_splitA+0x1a>
    1516:	47 95       	ror	r20

00001518 <__fp_splitA>:
    1518:	88 0f       	add	r24, r24
    151a:	97 fb       	bst	r25, 7
    151c:	99 1f       	adc	r25, r25
    151e:	61 f0       	breq	.+24     	; 0x1538 <__fp_splitA+0x20>
    1520:	9f 3f       	cpi	r25, 0xFF	; 255
    1522:	79 f0       	breq	.+30     	; 0x1542 <__fp_splitA+0x2a>
    1524:	87 95       	ror	r24
    1526:	08 95       	ret
    1528:	12 16       	cp	r1, r18
    152a:	13 06       	cpc	r1, r19
    152c:	14 06       	cpc	r1, r20
    152e:	55 1f       	adc	r21, r21
    1530:	f2 cf       	rjmp	.-28     	; 0x1516 <__fp_split3+0xe>
    1532:	46 95       	lsr	r20
    1534:	f1 df       	rcall	.-30     	; 0x1518 <__fp_splitA>
    1536:	08 c0       	rjmp	.+16     	; 0x1548 <__fp_splitA+0x30>
    1538:	16 16       	cp	r1, r22
    153a:	17 06       	cpc	r1, r23
    153c:	18 06       	cpc	r1, r24
    153e:	99 1f       	adc	r25, r25
    1540:	f1 cf       	rjmp	.-30     	; 0x1524 <__fp_splitA+0xc>
    1542:	86 95       	lsr	r24
    1544:	71 05       	cpc	r23, r1
    1546:	61 05       	cpc	r22, r1
    1548:	08 94       	sec
    154a:	08 95       	ret

0000154c <__fp_zero>:
    154c:	e8 94       	clt

0000154e <__fp_szero>:
    154e:	bb 27       	eor	r27, r27
    1550:	66 27       	eor	r22, r22
    1552:	77 27       	eor	r23, r23
    1554:	cb 01       	movw	r24, r22
    1556:	97 f9       	bld	r25, 7
    1558:	08 95       	ret

0000155a <__gesf2>:
    155a:	0e 94 38 0a 	call	0x1470	; 0x1470 <__fp_cmp>
    155e:	08 f4       	brcc	.+2      	; 0x1562 <__gesf2+0x8>
    1560:	8f ef       	ldi	r24, 0xFF	; 255
    1562:	08 95       	ret

00001564 <__mulsf3>:
    1564:	0e 94 c5 0a 	call	0x158a	; 0x158a <__mulsf3x>
    1568:	0c 94 73 0a 	jmp	0x14e6	; 0x14e6 <__fp_round>
    156c:	0e 94 65 0a 	call	0x14ca	; 0x14ca <__fp_pscA>
    1570:	38 f0       	brcs	.+14     	; 0x1580 <__mulsf3+0x1c>
    1572:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <__fp_pscB>
    1576:	20 f0       	brcs	.+8      	; 0x1580 <__mulsf3+0x1c>
    1578:	95 23       	and	r25, r21
    157a:	11 f0       	breq	.+4      	; 0x1580 <__mulsf3+0x1c>
    157c:	0c 94 5c 0a 	jmp	0x14b8	; 0x14b8 <__fp_inf>
    1580:	0c 94 62 0a 	jmp	0x14c4	; 0x14c4 <__fp_nan>
    1584:	11 24       	eor	r1, r1
    1586:	0c 94 a7 0a 	jmp	0x154e	; 0x154e <__fp_szero>

0000158a <__mulsf3x>:
    158a:	0e 94 84 0a 	call	0x1508	; 0x1508 <__fp_split3>
    158e:	70 f3       	brcs	.-36     	; 0x156c <__mulsf3+0x8>

00001590 <__mulsf3_pse>:
    1590:	95 9f       	mul	r25, r21
    1592:	c1 f3       	breq	.-16     	; 0x1584 <__mulsf3+0x20>
    1594:	95 0f       	add	r25, r21
    1596:	50 e0       	ldi	r21, 0x00	; 0
    1598:	55 1f       	adc	r21, r21
    159a:	62 9f       	mul	r22, r18
    159c:	f0 01       	movw	r30, r0
    159e:	72 9f       	mul	r23, r18
    15a0:	bb 27       	eor	r27, r27
    15a2:	f0 0d       	add	r31, r0
    15a4:	b1 1d       	adc	r27, r1
    15a6:	63 9f       	mul	r22, r19
    15a8:	aa 27       	eor	r26, r26
    15aa:	f0 0d       	add	r31, r0
    15ac:	b1 1d       	adc	r27, r1
    15ae:	aa 1f       	adc	r26, r26
    15b0:	64 9f       	mul	r22, r20
    15b2:	66 27       	eor	r22, r22
    15b4:	b0 0d       	add	r27, r0
    15b6:	a1 1d       	adc	r26, r1
    15b8:	66 1f       	adc	r22, r22
    15ba:	82 9f       	mul	r24, r18
    15bc:	22 27       	eor	r18, r18
    15be:	b0 0d       	add	r27, r0
    15c0:	a1 1d       	adc	r26, r1
    15c2:	62 1f       	adc	r22, r18
    15c4:	73 9f       	mul	r23, r19
    15c6:	b0 0d       	add	r27, r0
    15c8:	a1 1d       	adc	r26, r1
    15ca:	62 1f       	adc	r22, r18
    15cc:	83 9f       	mul	r24, r19
    15ce:	a0 0d       	add	r26, r0
    15d0:	61 1d       	adc	r22, r1
    15d2:	22 1f       	adc	r18, r18
    15d4:	74 9f       	mul	r23, r20
    15d6:	33 27       	eor	r19, r19
    15d8:	a0 0d       	add	r26, r0
    15da:	61 1d       	adc	r22, r1
    15dc:	23 1f       	adc	r18, r19
    15de:	84 9f       	mul	r24, r20
    15e0:	60 0d       	add	r22, r0
    15e2:	21 1d       	adc	r18, r1
    15e4:	82 2f       	mov	r24, r18
    15e6:	76 2f       	mov	r23, r22
    15e8:	6a 2f       	mov	r22, r26
    15ea:	11 24       	eor	r1, r1
    15ec:	9f 57       	subi	r25, 0x7F	; 127
    15ee:	50 40       	sbci	r21, 0x00	; 0
    15f0:	9a f0       	brmi	.+38     	; 0x1618 <__mulsf3_pse+0x88>
    15f2:	f1 f0       	breq	.+60     	; 0x1630 <__mulsf3_pse+0xa0>
    15f4:	88 23       	and	r24, r24
    15f6:	4a f0       	brmi	.+18     	; 0x160a <__mulsf3_pse+0x7a>
    15f8:	ee 0f       	add	r30, r30
    15fa:	ff 1f       	adc	r31, r31
    15fc:	bb 1f       	adc	r27, r27
    15fe:	66 1f       	adc	r22, r22
    1600:	77 1f       	adc	r23, r23
    1602:	88 1f       	adc	r24, r24
    1604:	91 50       	subi	r25, 0x01	; 1
    1606:	50 40       	sbci	r21, 0x00	; 0
    1608:	a9 f7       	brne	.-22     	; 0x15f4 <__mulsf3_pse+0x64>
    160a:	9e 3f       	cpi	r25, 0xFE	; 254
    160c:	51 05       	cpc	r21, r1
    160e:	80 f0       	brcs	.+32     	; 0x1630 <__mulsf3_pse+0xa0>
    1610:	0c 94 5c 0a 	jmp	0x14b8	; 0x14b8 <__fp_inf>
    1614:	0c 94 a7 0a 	jmp	0x154e	; 0x154e <__fp_szero>
    1618:	5f 3f       	cpi	r21, 0xFF	; 255
    161a:	e4 f3       	brlt	.-8      	; 0x1614 <__mulsf3_pse+0x84>
    161c:	98 3e       	cpi	r25, 0xE8	; 232
    161e:	d4 f3       	brlt	.-12     	; 0x1614 <__mulsf3_pse+0x84>
    1620:	86 95       	lsr	r24
    1622:	77 95       	ror	r23
    1624:	67 95       	ror	r22
    1626:	b7 95       	ror	r27
    1628:	f7 95       	ror	r31
    162a:	e7 95       	ror	r30
    162c:	9f 5f       	subi	r25, 0xFF	; 255
    162e:	c1 f7       	brne	.-16     	; 0x1620 <__mulsf3_pse+0x90>
    1630:	fe 2b       	or	r31, r30
    1632:	88 0f       	add	r24, r24
    1634:	91 1d       	adc	r25, r1
    1636:	96 95       	lsr	r25
    1638:	87 95       	ror	r24
    163a:	97 f9       	bld	r25, 7
    163c:	08 95       	ret

0000163e <__umulhisi3>:
    163e:	a2 9f       	mul	r26, r18
    1640:	b0 01       	movw	r22, r0
    1642:	b3 9f       	mul	r27, r19
    1644:	c0 01       	movw	r24, r0
    1646:	a3 9f       	mul	r26, r19
    1648:	70 0d       	add	r23, r0
    164a:	81 1d       	adc	r24, r1
    164c:	11 24       	eor	r1, r1
    164e:	91 1d       	adc	r25, r1
    1650:	b2 9f       	mul	r27, r18
    1652:	70 0d       	add	r23, r0
    1654:	81 1d       	adc	r24, r1
    1656:	11 24       	eor	r1, r1
    1658:	91 1d       	adc	r25, r1
    165a:	08 95       	ret

0000165c <_exit>:
    165c:	f8 94       	cli

0000165e <__stop_program>:
    165e:	ff cf       	rjmp	.-2      	; 0x165e <__stop_program>
